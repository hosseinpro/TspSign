package tspSign;

import javacard.framework.*;
import javacard.security.*;
import javacardx.crypto.Cipher;
import javacardx.apdu.ExtendedLength;
import javacard.framework.CardException;

public class tspSign extends Applet implements ISO7816, ExtendedLength
{
	private static final byte INS_VERIFY = (byte) 0x20;
	private static final byte INS_GET_CHALLENGE = (byte) 0x84;
	private static final byte INS_SIGN = (byte) 0x86;
	private static final byte INS_TSA_SIGN = (byte) 0x87;
	private static final byte INS_FILL_BUFFER = (byte) 0xCC;
	private static final byte INS_GET_RESPONSE = (byte) 0xC0;
	private static final byte INS_GARBAGE_COLLECTOR = (byte) 0x66;
	
	private static final short SW_PIN_INCORRECT_TRIES_LEFT = (short) 0x63C0;
	private static final byte KeyLen1024 = (short) 0x01;
	private static final byte KeyLen2048 = (short) 0x02;
	private static final byte KeyTypeRSA = (short) 0x01;
	private static final byte KeyTypeRSACRT = (short) 0x02;
	
	private static final short BIG_BUFFER_SIZE = (short)2200;
	private static byte[] bigBuffer = new byte[BIG_BUFFER_SIZE];
	
	private OwnerPIN pin = null;
	private static byte PIN_SIZE = 4;
	private byte[] pinValue;
	
	private RandomData randomData = null;
	private byte[] nonce;
	
    private static final byte[] cardPrivateKeyModulus = new byte[]{(byte) 0xDF,(byte) 0x6E,(byte) 0x6E,(byte) 0x44,(byte) 0xAD,(byte) 0xB6,(byte) 0xDE,(byte) 0x0E,(byte) 0x00,(byte) 0x80,(byte) 0xAA,(byte) 0x72,(byte) 0xC0,(byte) 0xC3,(byte) 0xA2,(byte) 0x21,(byte) 0xEF,(byte) 0x0C,(byte) 0xE7,(byte) 0x26,(byte) 0x89,(byte) 0x22,(byte) 0x8F,(byte) 0xAD,(byte) 0x58,(byte) 0xB1,(byte) 0xD5,(byte) 0x58,(byte) 0x53,(byte) 0x7C,(byte) 0x20,(byte) 0x40,(byte) 0x16,(byte) 0x6C,(byte) 0x81,(byte) 0x16,(byte) 0x0D,(byte) 0xD7,(byte) 0x66,(byte) 0xB8,(byte) 0x0D,(byte) 0x33,(byte) 0x2B,(byte) 0x8C,(byte) 0x2C,(byte) 0xFD,(byte) 0x8A,(byte) 0xC8,(byte) 0x2D,(byte) 0x22,(byte) 0x96,(byte) 0x02,(byte) 0x1B,(byte) 0x53,(byte) 0x5F,(byte) 0xB7,(byte) 0x63,(byte) 0xC8,(byte) 0x61,(byte) 0x61,(byte) 0xBE,(byte) 0x95,(byte) 0x5D,(byte) 0xA8,(byte) 0x79,(byte) 0x59,(byte) 0xE2,(byte) 0xCE,(byte) 0xB7,(byte) 0x94,(byte) 0x35,(byte) 0xF5,(byte) 0xBA,(byte) 0xE0,(byte) 0xB4,(byte) 0x09,(byte) 0xB6,(byte) 0x1D,(byte) 0xAD,(byte) 0x9A,(byte) 0x1C,(byte) 0xF6,(byte) 0xB4,(byte) 0x57,(byte) 0x98,(byte) 0x57,(byte) 0xB2,(byte) 0x6E,(byte) 0xEC,(byte) 0xC7,(byte) 0x2F,(byte) 0xEF,(byte) 0x63,(byte) 0xDE,(byte) 0x52,(byte) 0x62,(byte) 0x0C,(byte) 0xDC,(byte) 0x5A,(byte) 0x52,(byte) 0x67,(byte) 0xA7,(byte) 0xD0,(byte) 0x33,(byte) 0x11,(byte) 0xE6,(byte) 0x49,(byte) 0x20,(byte) 0x01,(byte) 0x63,(byte) 0xCC,(byte) 0xFD,(byte) 0x0D,(byte) 0x2F,(byte) 0x1B,(byte) 0x48,(byte) 0xFB,(byte) 0xB5,(byte) 0xF5,(byte) 0x6B,(byte) 0xD4,(byte) 0x0F,(byte) 0x96,(byte) 0xE4,(byte) 0x08,(byte) 0x4E,(byte) 0x7B,(byte) 0x27};
	private static final byte[] cardPrivateKeyExponent = new byte[]{(byte) 0xB8,(byte) 0xED,(byte) 0x6A,(byte) 0xE0,(byte) 0xF7,(byte) 0x32,(byte) 0xCA,(byte) 0xF9,(byte) 0xA5,(byte) 0xDA,(byte) 0xD8,(byte) 0xB8,(byte) 0xDF,(byte) 0xE9,(byte) 0x4C,(byte) 0x31,(byte) 0x6F,(byte) 0xED,(byte) 0x2B,(byte) 0x08,(byte) 0x8F,(byte) 0x2A,(byte) 0x86,(byte) 0xE6,(byte) 0xBF,(byte) 0xE9,(byte) 0x78,(byte) 0x9E,(byte) 0x81,(byte) 0x82,(byte) 0xD4,(byte) 0x22,(byte) 0x97,(byte) 0x2C,(byte) 0xB9,(byte) 0x6E,(byte) 0xEA,(byte) 0x87,(byte) 0xE5,(byte) 0x21,(byte) 0xE2,(byte) 0xF2,(byte) 0xFE,(byte) 0x51,(byte) 0x28,(byte) 0x0F,(byte) 0xB6,(byte) 0x25,(byte) 0x56,(byte) 0x8E,(byte) 0x30,(byte) 0xC0,(byte) 0x8F,(byte) 0xA3,(byte) 0x63,(byte) 0x2E,(byte) 0xA3,(byte) 0xAC,(byte) 0xFF,(byte) 0x44,(byte) 0xEA,(byte) 0x7C,(byte) 0x30,(byte) 0x26,(byte) 0x2C,(byte) 0x3D,(byte) 0x32,(byte) 0xC7,(byte) 0xB2,(byte) 0x75,(byte) 0xF0,(byte) 0x87,(byte) 0x45,(byte) 0xBE,(byte) 0xE0,(byte) 0x71,(byte) 0xDA,(byte) 0x65,(byte) 0x8D,(byte) 0xAF,(byte) 0x93,(byte) 0xFE,(byte) 0x71,(byte) 0x08,(byte) 0xAD,(byte) 0x86,(byte) 0xAE,(byte) 0x5B,(byte) 0x8C,(byte) 0x01,(byte) 0xEA,(byte) 0xBA,(byte) 0xD2,(byte) 0x62,(byte) 0x7A,(byte) 0x8E,(byte) 0x1B,(byte) 0x92,(byte) 0xE9,(byte) 0xA1,(byte) 0xD7,(byte) 0x54,(byte) 0x7D,(byte) 0x01,(byte) 0x59,(byte) 0x29,(byte) 0xE6,(byte) 0x76,(byte) 0xDC,(byte) 0xE7,(byte) 0x05,(byte) 0x9C,(byte) 0xC8,(byte) 0xE3,(byte) 0x62,(byte) 0x1B,(byte) 0x8C,(byte) 0x79,(byte) 0x33,(byte) 0x38,(byte) 0xE6,(byte) 0xFF,(byte) 0x87,(byte) 0x71,(byte) 0x53,(byte) 0x59,(byte) 0xAB,(byte) 0x19};
	private static final byte[] cardPrivateCrtKeyP = new byte[]{(byte)0xF5,(byte)0x22,(byte)0xB2,(byte)0x23,(byte)0xA7,(byte)0xF0,(byte)0xDE,(byte)0xCE,(byte)0xC2,(byte)0x7F,(byte)0xD1,(byte)0x6A,(byte)0x93,(byte)0x4B,(byte)0x58,(byte)0xED,(byte)0x10,(byte)0x28,(byte)0xB3,(byte)0x87,(byte)0x07,(byte)0xD6,(byte)0xAE,(byte)0x96,(byte)0xA9,(byte)0xBB,(byte)0x54,(byte)0x12,(byte)0x61,(byte)0x67,(byte)0x63,(byte)0xD0,(byte)0x1C,(byte)0x8E,(byte)0x27,(byte)0x5F,(byte)0x83,(byte)0x30,(byte)0x1D,(byte)0xE0,(byte)0x99,(byte)0xBE,(byte)0xC2,(byte)0xB0,(byte)0x1F,(byte)0x79,(byte)0xD0,(byte)0x4C,(byte)0xE6,(byte)0x27,(byte)0xD9,(byte)0xD7,(byte)0x96,(byte)0x2B,(byte)0xF1,(byte)0xDD,(byte)0xC8,(byte)0xE3,(byte)0x4A,(byte)0x44,(byte)0x3D,(byte)0x5A,(byte)0x76,(byte)0xF5};
	private static final byte[] cardPrivateCrtKeyQ = new byte[]{(byte)0xE9,(byte)0x55,(byte)0x7A,(byte)0xD3,(byte)0x85,(byte)0x2F,(byte)0x07,(byte)0x41,(byte)0x38,(byte)0x03,(byte)0xF9,(byte)0xE8,(byte)0xAF,(byte)0x7D,(byte)0x3B,(byte)0xA7,(byte)0x0D,(byte)0x94,(byte)0x1F,(byte)0x81,(byte)0x4C,(byte)0x3A,(byte)0xDD,(byte)0x68,(byte)0x76,(byte)0xEF,(byte)0x60,(byte)0xBC,(byte)0xC8,(byte)0xC9,(byte)0x3E,(byte)0xBB,(byte)0x97,(byte)0xA8,(byte)0xB0,(byte)0x96,(byte)0x7D,(byte)0x4E,(byte)0x9F,(byte)0x03,(byte)0xF3,(byte)0x3F,(byte)0x4E,(byte)0xF8,(byte)0x47,(byte)0x73,(byte)0x2F,(byte)0x70,(byte)0x15,(byte)0x34,(byte)0xEA,(byte)0xB6,(byte)0x85,(byte)0x3C,(byte)0x8A,(byte)0x3A,(byte)0xE8,(byte)0x97,(byte)0x59,(byte)0x87,(byte)0x2A,(byte)0xDA,(byte)0x80,(byte)0x2B};
	private static final byte[] cardPrivateCrtKeyDP = new byte[]{(byte)0x63,(byte)0x0E,(byte)0xB1,(byte)0x33,(byte)0xAD,(byte)0x62,(byte)0xAD,(byte)0x76,(byte)0x99,(byte)0xAC,(byte)0x33,(byte)0x00,(byte)0xC1,(byte)0x22,(byte)0xBA,(byte)0x7D,(byte)0x99,(byte)0x81,(byte)0x09,(byte)0x02,(byte)0xF0,(byte)0xCC,(byte)0xF4,(byte)0xE2,(byte)0x17,(byte)0x16,(byte)0x86,(byte)0xE3,(byte)0xA2,(byte)0x8E,(byte)0xB8,(byte)0x0B,(byte)0xD9,(byte)0xEE,(byte)0x2B,(byte)0xC4,(byte)0xF1,(byte)0xEB,(byte)0x58,(byte)0xB7,(byte)0x71,(byte)0x09,(byte)0x5F,(byte)0xFC,(byte)0xF1,(byte)0xCB,(byte)0x34,(byte)0xBC,(byte)0x4E,(byte)0x69,(byte)0x1E,(byte)0x23,(byte)0x7B,(byte)0x20,(byte)0xA8,(byte)0xED,(byte)0x39,(byte)0x87,(byte)0x77,(byte)0x74,(byte)0x59,(byte)0xE2,(byte)0x9B,(byte)0x9D};
	private static final byte[] cardPrivateCrtKeyDQ = new byte[]{(byte)0xB3,(byte)0x5E,(byte)0xAE,(byte)0xC9,(byte)0x23,(byte)0xBC,(byte)0xFF,(byte)0x4A,(byte)0xB7,(byte)0x90,(byte)0xF6,(byte)0xF0,(byte)0x54,(byte)0xD7,(byte)0x64,(byte)0xA0,(byte)0x0A,(byte)0xE4,(byte)0x2F,(byte)0x43,(byte)0xEA,(byte)0x21,(byte)0xE6,(byte)0x4A,(byte)0x84,(byte)0x03,(byte)0x88,(byte)0xCE,(byte)0x17,(byte)0x5B,(byte)0xFD,(byte)0x09,(byte)0xA0,(byte)0x90,(byte)0x61,(byte)0x0F,(byte)0x8E,(byte)0xCC,(byte)0x7D,(byte)0x99,(byte)0x3F,(byte)0xC9,(byte)0x0F,(byte)0x1F,(byte)0xF5,(byte)0x6D,(byte)0x2A,(byte)0xAE,(byte)0x72,(byte)0xDE,(byte)0xF6,(byte)0xFF,(byte)0xD0,(byte)0x74,(byte)0xB5,(byte)0x9E,(byte)0x8B,(byte)0x66,(byte)0xAD,(byte)0xC0,(byte)0x26,(byte)0xC5,(byte)0x49,(byte)0x79};
	private static final byte[] cardPrivateCrtKeyPQ = new byte[]{(byte)0x14,(byte)0xE1,(byte)0xFE,(byte)0x47,(byte)0x94,(byte)0x07,(byte)0x27,(byte)0x00,(byte)0x1D,(byte)0x51,(byte)0x41,(byte)0x89,(byte)0x2F,(byte)0x8F,(byte)0xFB,(byte)0xF6,(byte)0xB5,(byte)0x1F,(byte)0xA3,(byte)0x2B,(byte)0xD6,(byte)0xDE,(byte)0x49,(byte)0xF7,(byte)0x92,(byte)0x7F,(byte)0xE9,(byte)0xCC,(byte)0x2D,(byte)0x73,(byte)0x0B,(byte)0x48,(byte)0xA9,(byte)0x27,(byte)0x25,(byte)0x75,(byte)0x84,(byte)0x1E,(byte)0x61,(byte)0x27,(byte)0x6A,(byte)0xF1,(byte)0x2A,(byte)0xB7,(byte)0x3C,(byte)0xC0,(byte)0xC4,(byte)0x34,(byte)0x0F,(byte)0xBC,(byte)0xD4,(byte)0x0D,(byte)0x8E,(byte)0x8C,(byte)0x37,(byte)0x0D,(byte)0x9B,(byte)0x7E,(byte)0xEB,(byte)0x21,(byte)0xD8,(byte)0xA6,(byte)0x51,(byte)0x42};
	private static final byte[] caPublicKeyModulus = new byte[]{(byte) 0xB0,(byte) 0x02,(byte) 0xCC,(byte) 0xE9,(byte) 0x2A,(byte) 0xC1,(byte) 0xDE,(byte) 0x05,(byte) 0x6B,(byte) 0x6E,(byte) 0x5B,(byte) 0xA7,(byte) 0x28,(byte) 0x79,(byte) 0x9A,(byte) 0xA4,(byte) 0x75,(byte) 0xE8,(byte) 0xCF,(byte) 0x1C,(byte) 0xAA,(byte) 0xE2,(byte) 0xEA,(byte) 0xDD,(byte) 0x26,(byte) 0x8E,(byte) 0x6F,(byte) 0x53,(byte) 0x28,(byte) 0x1A,(byte) 0x08,(byte) 0x44,(byte) 0xF7,(byte) 0xE1,(byte) 0x38,(byte) 0x6E,(byte) 0x8B,(byte) 0x75,(byte) 0xEC,(byte) 0xD6,(byte) 0x9D,(byte) 0x3A,(byte) 0x96,(byte) 0x9E,(byte) 0x2A,(byte) 0x71,(byte) 0xD3,(byte) 0xC4,(byte) 0x69,(byte) 0x00,(byte) 0x8F,(byte) 0x61,(byte) 0xF4,(byte) 0xA9,(byte) 0xD8,(byte) 0xF1,(byte) 0x13,(byte) 0x10,(byte) 0x68,(byte) 0xEB,(byte) 0x83,(byte) 0x37,(byte) 0x72,(byte) 0x89,(byte) 0xB4,(byte) 0x86,(byte) 0xCB,(byte) 0x36,(byte) 0xED,(byte) 0x11,(byte) 0x1A,(byte) 0x73,(byte) 0x13,(byte) 0x2D,(byte) 0xC8,(byte) 0x6F,(byte) 0xB1,(byte) 0xAA,(byte) 0x30,(byte) 0xD3,(byte) 0x5C,(byte) 0xE1,(byte) 0x3A,(byte) 0xDC,(byte) 0xE1,(byte) 0x10,(byte) 0x66,(byte) 0xD9,(byte) 0x7B,(byte) 0xC0,(byte) 0xB9,(byte) 0x93,(byte) 0xC3,(byte) 0xDF,(byte) 0x97,(byte) 0xED,(byte) 0x47,(byte) 0x97,(byte) 0xBC,(byte) 0x2F,(byte) 0xD3,(byte) 0x24,(byte) 0x7C,(byte) 0x6C,(byte) 0x37,(byte) 0x01,(byte) 0x7C,(byte) 0x73,(byte) 0xBA,(byte) 0x2E,(byte) 0x55,(byte) 0x1E,(byte) 0xBC,(byte) 0x7D,(byte) 0x4C,(byte) 0x9C,(byte) 0xF9,(byte) 0xCB,(byte) 0x1E,(byte) 0xD6,(byte) 0x8B,(byte) 0x1B,(byte) 0x23,(byte) 0x68,(byte) 0xAC,(byte) 0x9B,(byte) 0xFE,(byte) 0x83};
	private static final byte[] caPublicKeyExponent = new byte[]{(byte) 0x01,(byte) 0x00,(byte) 0x01};
	private static final byte[] cardCertificate = new byte[]{(byte)0x30,(byte)0x82,(byte)0x02,(byte)0x39,(byte)0x30,(byte)0x82,(byte)0x01,(byte)0xA2,(byte)0xA0,(byte)0x03,(byte)0x02,(byte)0x01,(byte)0x02,(byte)0x02,(byte)0x09,(byte)0x00,(byte)0xD8,(byte)0xAA,(byte)0x3B,(byte)0x5B,(byte)0x10,(byte)0xD6,(byte)0xC1,(byte)0xD8,(byte)0x30,(byte)0x0D,(byte)0x06,(byte)0x09,(byte)0x2A,(byte)0x86,(byte)0x48,(byte)0x86,(byte)0xF7,(byte)0x0D,(byte)0x01,(byte)0x01,(byte)0x05,(byte)0x05,(byte)0x00,(byte)0x30,(byte)0x50,(byte)0x31,(byte)0x0B,(byte)0x30,(byte)0x09,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x06,(byte)0x13,(byte)0x02,(byte)0x55,(byte)0x53,(byte)0x31,(byte)0x10,(byte)0x30,(byte)0x0E,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x08,(byte)0x13,(byte)0x07,(byte)0x46,(byte)0x6C,(byte)0x6F,(byte)0x72,(byte)0x69,(byte)0x64,(byte)0x61,(byte)0x31,(byte)0x10,(byte)0x30,(byte)0x0E,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x07,(byte)0x13,(byte)0x07,(byte)0x4F,(byte)0x72,(byte)0x6C,(byte)0x61,(byte)0x6E,(byte)0x64,(byte)0x6F,(byte)0x31,(byte)0x0C,(byte)0x30,(byte)0x0A,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x0A,(byte)0x13,(byte)0x03,(byte)0x55,(byte)0x43,(byte)0x46,(byte)0x31,(byte)0x0F,(byte)0x30,(byte)0x0D,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x03,(byte)0x13,(byte)0x06,(byte)0x52,(byte)0x6F,(byte)0x6F,(byte)0x74,(byte)0x43,(byte)0x41,(byte)0x30,(byte)0x1E,(byte)0x17,(byte)0x0D,(byte)0x31,(byte)0x37,(byte)0x30,(byte)0x37,(byte)0x32,(byte)0x30,(byte)0x32,(byte)0x33,(byte)0x34,(byte)0x38,(byte)0x31,(byte)0x36,(byte)0x5A,(byte)0x17,(byte)0x0D,
															 (byte)0x31,(byte)0x38,(byte)0x30,(byte)0x32,(byte)0x30,(byte)0x35,(byte)0x32,(byte)0x33,(byte)0x34,(byte)0x38,(byte)0x31,(byte)0x36,(byte)0x5A,(byte)0x30,(byte)0x51,(byte)0x31,(byte)0x0B,(byte)0x30,(byte)0x09,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x06,(byte)0x13,(byte)0x02,(byte)0x55,(byte)0x53,(byte)0x31,(byte)0x10,(byte)0x30,(byte)0x0E,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x08,(byte)0x13,(byte)0x07,(byte)0x46,(byte)0x6C,(byte)0x6F,(byte)0x72,(byte)0x69,(byte)0x64,(byte)0x61,(byte)0x31,(byte)0x10,(byte)0x30,(byte)0x0E,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x07,(byte)0x13,(byte)0x07,(byte)0x4F,(byte)0x72,(byte)0x6C,(byte)0x61,(byte)0x6E,(byte)0x64,(byte)0x6F,(byte)0x31,(byte)0x0C,(byte)0x30,(byte)0x0A,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x0A,(byte)0x13,(byte)0x03,(byte)0x55,(byte)0x43,(byte)0x46,(byte)0x31,(byte)0x10,(byte)0x30,(byte)0x0E,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x03,(byte)0x13,(byte)0x07,(byte)0x48,(byte)0x6F,(byte)0x73,(byte)0x73,(byte)0x65,(byte)0x69,(byte)0x6E,(byte)0x30,(byte)0x81,(byte)0x9F,(byte)0x30,(byte)0x0D,(byte)0x06,(byte)0x09,(byte)0x2A,(byte)0x86,(byte)0x48,(byte)0x86,(byte)0xF7,(byte)0x0D,(byte)0x01,(byte)0x01,(byte)0x01,(byte)0x05,(byte)0x00,(byte)0x03,(byte)0x81,(byte)0x8D,(byte)0x00,(byte)0x30,(byte)0x81,(byte)0x89,(byte)0x02,(byte)0x81,(byte)0x81,(byte)0x00,(byte)0xDF,(byte)0x6E,(byte)0x6E,(byte)0x44,(byte)0xAD,(byte)0xB6,(byte)0xDE,(byte)0x0E,(byte)0x00,(byte)0x80,(byte)0xAA,(byte)0x72,(byte)0xC0,(byte)0xC3,(byte)0xA2,
															 (byte)0x21,(byte)0xEF,(byte)0x0C,(byte)0xE7,(byte)0x26,(byte)0x89,(byte)0x22,(byte)0x8F,(byte)0xAD,(byte)0x58,(byte)0xB1,(byte)0xD5,(byte)0x58,(byte)0x53,(byte)0x7C,(byte)0x20,(byte)0x40,(byte)0x16,(byte)0x6C,(byte)0x81,(byte)0x16,(byte)0x0D,(byte)0xD7,(byte)0x66,(byte)0xB8,(byte)0x0D,(byte)0x33,(byte)0x2B,(byte)0x8C,(byte)0x2C,(byte)0xFD,(byte)0x8A,(byte)0xC8,(byte)0x2D,(byte)0x22,(byte)0x96,(byte)0x02,(byte)0x1B,(byte)0x53,(byte)0x5F,(byte)0xB7,(byte)0x63,(byte)0xC8,(byte)0x61,(byte)0x61,(byte)0xBE,(byte)0x95,(byte)0x5D,(byte)0xA8,(byte)0x79,(byte)0x59,(byte)0xE2,(byte)0xCE,(byte)0xB7,(byte)0x94,(byte)0x35,(byte)0xF5,(byte)0xBA,(byte)0xE0,(byte)0xB4,(byte)0x09,(byte)0xB6,(byte)0x1D,(byte)0xAD,(byte)0x9A,(byte)0x1C,(byte)0xF6,(byte)0xB4,(byte)0x57,(byte)0x98,(byte)0x57,(byte)0xB2,(byte)0x6E,(byte)0xEC,(byte)0xC7,(byte)0x2F,(byte)0xEF,(byte)0x63,(byte)0xDE,(byte)0x52,(byte)0x62,(byte)0x0C,(byte)0xDC,(byte)0x5A,(byte)0x52,(byte)0x67,(byte)0xA7,(byte)0xD0,(byte)0x33,(byte)0x11,(byte)0xE6,(byte)0x49,(byte)0x20,(byte)0x01,(byte)0x63,(byte)0xCC,(byte)0xFD,(byte)0x0D,(byte)0x2F,(byte)0x1B,(byte)0x48,(byte)0xFB,(byte)0xB5,(byte)0xF5,(byte)0x6B,(byte)0xD4,(byte)0x0F,(byte)0x96,(byte)0xE4,(byte)0x08,(byte)0x4E,(byte)0x7B,(byte)0x27,(byte)0x02,(byte)0x03,(byte)0x01,(byte)0x00,(byte)0x01,(byte)0xA3,(byte)0x1A,(byte)0x30,(byte)0x18,(byte)0x30,(byte)0x16,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x1D,(byte)0x25,(byte)0x01,(byte)0x01,(byte)0xFF,(byte)0x04,(byte)0x0C,(byte)0x30,(byte)0x0A,(byte)0x06,(byte)0x08,(byte)0x2B,(byte)0x06,
															 (byte)0x01,(byte)0x05,(byte)0x05,(byte)0x07,(byte)0x03,(byte)0x08,(byte)0x30,(byte)0x0D,(byte)0x06,(byte)0x09,(byte)0x2A,(byte)0x86,(byte)0x48,(byte)0x86,(byte)0xF7,(byte)0x0D,(byte)0x01,(byte)0x01,(byte)0x05,(byte)0x05,(byte)0x00,(byte)0x03,(byte)0x81,(byte)0x81,(byte)0x00,(byte)0x80,(byte)0xA3,(byte)0x0F,(byte)0x23,(byte)0xD4,(byte)0xA7,(byte)0x10,(byte)0xDB,(byte)0xFD,(byte)0x16,(byte)0x79,(byte)0xD5,(byte)0xCA,(byte)0xD9,(byte)0xA7,(byte)0x9F,(byte)0xBB,(byte)0x9F,(byte)0x25,(byte)0xF1,(byte)0xEB,(byte)0x94,(byte)0x24,(byte)0xFE,(byte)0xF1,(byte)0xB9,(byte)0xB7,(byte)0xC7,(byte)0x9B,(byte)0xC0,(byte)0x2C,(byte)0xD6,(byte)0x43,(byte)0x68,(byte)0xD0,(byte)0xBD,(byte)0xFF,(byte)0xC9,(byte)0xE6,(byte)0xB6,(byte)0x86,(byte)0xD1,(byte)0xBB,(byte)0x91,(byte)0x9E,(byte)0x8A,(byte)0xBC,(byte)0xEB,(byte)0x0B,(byte)0xB3,(byte)0x37,(byte)0xF0,(byte)0x1F,(byte)0xB1,(byte)0x17,(byte)0xDC,(byte)0x63,(byte)0xB1,(byte)0x0E,(byte)0xE6,(byte)0x8E,(byte)0xD0,(byte)0x0B,(byte)0xEE,(byte)0x05,(byte)0xD4,(byte)0x5F,(byte)0x1A,(byte)0xEE,(byte)0x1B,(byte)0x33,(byte)0x5E,(byte)0xEF,(byte)0xC8,(byte)0x77,(byte)0xFA,(byte)0x09,(byte)0xA1,(byte)0x59,(byte)0x40,(byte)0xF2,(byte)0x4B,(byte)0xC0,(byte)0x26,(byte)0x77,(byte)0x21,(byte)0x91,(byte)0xA9,(byte)0xD5,(byte)0x09,(byte)0xEB,(byte)0x94,(byte)0xAB,(byte)0xF6,(byte)0xC1,(byte)0xC3,(byte)0xEB,(byte)0x96,(byte)0x74,(byte)0x98,(byte)0x89,(byte)0xA1,(byte)0x19,(byte)0x48,(byte)0x7A,(byte)0x30,(byte)0xB0,(byte)0x0C,(byte)0x89,(byte)0x2A,(byte)0xCF,(byte)0xCC,(byte)0x59,(byte)0x56,(byte)0x38,
															 (byte)0xF7,(byte)0x62,(byte)0xB8,(byte)0x8C,(byte)0x70,(byte)0xBD,(byte)0x26,(byte)0xB0,(byte)0x1D,(byte)0xBE,(byte)0x7F,(byte)0x7F,(byte)0x2F};
	private static final byte[] tsrResponseTemplate = new byte[]{(byte)0x30,(byte)0x82,(byte)0x04,(byte)0x67,(byte)0x30,(byte)0x15,(byte)0x02,(byte)0x01,(byte)0x00,(byte)0x30,(byte)0x10,(byte)0x0C,(byte)0x0E,(byte)0x4F,(byte)0x70,(byte)0x65,(byte)0x72,(byte)0x61,(byte)0x74,(byte)0x69,(byte)0x6F,(byte)0x6E,(byte)0x20,(byte)0x4F,(byte)0x6B,(byte)0x61,(byte)0x79,(byte)0x30,(byte)0x82,(byte)0x04,(byte)0x4C,(byte)0x06,(byte)0x09,(byte)0x2A,(byte)0x86,(byte)0x48,(byte)0x86,(byte)0xF7,(byte)0x0D,(byte)0x01,(byte)0x07,(byte)0x02,(byte)0xA0,(byte)0x82,(byte)0x04,(byte)0x3D,(byte)0x30,(byte)0x82,(byte)0x04,(byte)0x39,(byte)0x02,(byte)0x01,(byte)0x03,(byte)0x31,(byte)0x0B,(byte)0x30,(byte)0x09,(byte)0x06,(byte)0x05,(byte)0x2B,(byte)0x0E,(byte)0x03,(byte)0x02,(byte)0x1A,(byte)0x05,(byte)0x00,(byte)0x30,(byte)0x50,(byte)0x06,(byte)0x0B,(byte)0x2A,(byte)0x86,(byte)0x48,(byte)0x86,(byte)0xF7,(byte)0x0D,(byte)0x01,(byte)0x09,(byte)0x10,(byte)0x01,(byte)0x04,(byte)0xA0,(byte)0x41,(byte)0x04,(byte)0x3F,(byte)0x30,(byte)0x3D,(byte)0x02,(byte)0x01,(byte)0x01,(byte)0x06,(byte)0x01,(byte)0x2A,(byte)0x30,(byte)0x21,(byte)0x30,(byte)0x09,(byte)0x06,(byte)0x05,(byte)0x2B,(byte)0x0E,(byte)0x03,(byte)0x02,(byte)0x1A,(byte)0x05,(byte)0x00,(byte)0x04,(byte)0x14,(byte)0x8D,(byte)0xD5,(byte)0xC6,(byte)0x07,(byte)0xD2,(byte)0xE1,(byte)0xB9,(byte)0xC0,(byte)0xED,(byte)0xF5,(byte)0x53,(byte)0xEB,(byte)0x6F,(byte)0x83,(byte)0x5B,(byte)0xCF,(byte)0xCC,(byte)0x65,(byte)0x26,(byte)0x13,(byte)0x02,(byte)0x01,(byte)0x17,(byte)0x18,(byte)0x0F,(byte)0x32,(byte)0x30,(byte)0x31,(byte)0x37,(byte)0x30,(byte)0x37,(byte)0x32,
														(byte)0x30,(byte)0x31,(byte)0x33,(byte)0x32,(byte)0x35,(byte)0x35,(byte)0x35,(byte)0x5A,(byte)0xA0,(byte)0x82,(byte)0x02,(byte)0x3D,(byte)0x30,(byte)0x82,(byte)0x02,(byte)0x39,(byte)0x30,(byte)0x82,(byte)0x01,(byte)0xA2,(byte)0xA0,(byte)0x03,(byte)0x02,(byte)0x01,(byte)0x02,(byte)0x02,(byte)0x09,(byte)0x00,(byte)0xD8,(byte)0xAA,(byte)0x3B,(byte)0x5B,(byte)0x10,(byte)0xD6,(byte)0xC1,(byte)0xD8,(byte)0x30,(byte)0x0D,(byte)0x06,(byte)0x09,(byte)0x2A,(byte)0x86,(byte)0x48,(byte)0x86,(byte)0xF7,(byte)0x0D,(byte)0x01,(byte)0x01,(byte)0x05,(byte)0x05,(byte)0x00,(byte)0x30,(byte)0x50,(byte)0x31,(byte)0x0B,(byte)0x30,(byte)0x09,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x06,(byte)0x13,(byte)0x02,(byte)0x55,(byte)0x53,(byte)0x31,(byte)0x10,(byte)0x30,(byte)0x0E,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x08,(byte)0x13,(byte)0x07,(byte)0x46,(byte)0x6C,(byte)0x6F,(byte)0x72,(byte)0x69,(byte)0x64,(byte)0x61,(byte)0x31,(byte)0x10,(byte)0x30,(byte)0x0E,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x07,(byte)0x13,(byte)0x07,(byte)0x4F,(byte)0x72,(byte)0x6C,(byte)0x61,(byte)0x6E,(byte)0x64,(byte)0x6F,(byte)0x31,(byte)0x0C,(byte)0x30,(byte)0x0A,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x0A,(byte)0x13,(byte)0x03,(byte)0x55,(byte)0x43,(byte)0x46,(byte)0x31,(byte)0x0F,(byte)0x30,(byte)0x0D,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x03,(byte)0x13,(byte)0x06,(byte)0x52,(byte)0x6F,(byte)0x6F,(byte)0x74,(byte)0x43,(byte)0x41,(byte)0x30,(byte)0x1E,(byte)0x17,(byte)0x0D,(byte)0x31,(byte)0x37,(byte)0x30,
														(byte)0x37,(byte)0x32,(byte)0x30,(byte)0x32,(byte)0x33,(byte)0x34,(byte)0x38,(byte)0x31,(byte)0x36,(byte)0x5A,(byte)0x17,(byte)0x0D,(byte)0x31,(byte)0x38,(byte)0x30,(byte)0x32,(byte)0x30,(byte)0x35,(byte)0x32,(byte)0x33,(byte)0x34,(byte)0x38,(byte)0x31,(byte)0x36,(byte)0x5A,(byte)0x30,(byte)0x51,(byte)0x31,(byte)0x0B,(byte)0x30,(byte)0x09,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x06,(byte)0x13,(byte)0x02,(byte)0x55,(byte)0x53,(byte)0x31,(byte)0x10,(byte)0x30,(byte)0x0E,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x08,(byte)0x13,(byte)0x07,(byte)0x46,(byte)0x6C,(byte)0x6F,(byte)0x72,(byte)0x69,(byte)0x64,(byte)0x61,(byte)0x31,(byte)0x10,(byte)0x30,(byte)0x0E,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x07,(byte)0x13,(byte)0x07,(byte)0x4F,(byte)0x72,(byte)0x6C,(byte)0x61,(byte)0x6E,(byte)0x64,(byte)0x6F,(byte)0x31,(byte)0x0C,(byte)0x30,(byte)0x0A,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x0A,(byte)0x13,(byte)0x03,(byte)0x55,(byte)0x43,(byte)0x46,(byte)0x31,(byte)0x10,(byte)0x30,(byte)0x0E,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x03,(byte)0x13,(byte)0x07,(byte)0x48,(byte)0x6F,(byte)0x73,(byte)0x73,(byte)0x65,(byte)0x69,(byte)0x6E,(byte)0x30,(byte)0x81,(byte)0x9F,(byte)0x30,(byte)0x0D,(byte)0x06,(byte)0x09,(byte)0x2A,(byte)0x86,(byte)0x48,(byte)0x86,(byte)0xF7,(byte)0x0D,(byte)0x01,(byte)0x01,(byte)0x01,(byte)0x05,(byte)0x00,(byte)0x03,(byte)0x81,(byte)0x8D,(byte)0x00,(byte)0x30,(byte)0x81,(byte)0x89,(byte)0x02,(byte)0x81,(byte)0x81,(byte)0x00,(byte)0xDF,(byte)0x6E,(byte)0x6E,
														(byte)0x44,(byte)0xAD,(byte)0xB6,(byte)0xDE,(byte)0x0E,(byte)0x00,(byte)0x80,(byte)0xAA,(byte)0x72,(byte)0xC0,(byte)0xC3,(byte)0xA2,(byte)0x21,(byte)0xEF,(byte)0x0C,(byte)0xE7,(byte)0x26,(byte)0x89,(byte)0x22,(byte)0x8F,(byte)0xAD,(byte)0x58,(byte)0xB1,(byte)0xD5,(byte)0x58,(byte)0x53,(byte)0x7C,(byte)0x20,(byte)0x40,(byte)0x16,(byte)0x6C,(byte)0x81,(byte)0x16,(byte)0x0D,(byte)0xD7,(byte)0x66,(byte)0xB8,(byte)0x0D,(byte)0x33,(byte)0x2B,(byte)0x8C,(byte)0x2C,(byte)0xFD,(byte)0x8A,(byte)0xC8,(byte)0x2D,(byte)0x22,(byte)0x96,(byte)0x02,(byte)0x1B,(byte)0x53,(byte)0x5F,(byte)0xB7,(byte)0x63,(byte)0xC8,(byte)0x61,(byte)0x61,(byte)0xBE,(byte)0x95,(byte)0x5D,(byte)0xA8,(byte)0x79,(byte)0x59,(byte)0xE2,(byte)0xCE,(byte)0xB7,(byte)0x94,(byte)0x35,(byte)0xF5,(byte)0xBA,(byte)0xE0,(byte)0xB4,(byte)0x09,(byte)0xB6,(byte)0x1D,(byte)0xAD,(byte)0x9A,(byte)0x1C,(byte)0xF6,(byte)0xB4,(byte)0x57,(byte)0x98,(byte)0x57,(byte)0xB2,(byte)0x6E,(byte)0xEC,(byte)0xC7,(byte)0x2F,(byte)0xEF,(byte)0x63,(byte)0xDE,(byte)0x52,(byte)0x62,(byte)0x0C,(byte)0xDC,(byte)0x5A,(byte)0x52,(byte)0x67,(byte)0xA7,(byte)0xD0,(byte)0x33,(byte)0x11,(byte)0xE6,(byte)0x49,(byte)0x20,(byte)0x01,(byte)0x63,(byte)0xCC,(byte)0xFD,(byte)0x0D,(byte)0x2F,(byte)0x1B,(byte)0x48,(byte)0xFB,(byte)0xB5,(byte)0xF5,(byte)0x6B,(byte)0xD4,(byte)0x0F,(byte)0x96,(byte)0xE4,(byte)0x08,(byte)0x4E,(byte)0x7B,(byte)0x27,(byte)0x02,(byte)0x03,(byte)0x01,(byte)0x00,(byte)0x01,(byte)0xA3,(byte)0x1A,(byte)0x30,(byte)0x18,(byte)0x30,(byte)0x16,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x1D,
														(byte)0x25,(byte)0x01,(byte)0x01,(byte)0xFF,(byte)0x04,(byte)0x0C,(byte)0x30,(byte)0x0A,(byte)0x06,(byte)0x08,(byte)0x2B,(byte)0x06,(byte)0x01,(byte)0x05,(byte)0x05,(byte)0x07,(byte)0x03,(byte)0x08,(byte)0x30,(byte)0x0D,(byte)0x06,(byte)0x09,(byte)0x2A,(byte)0x86,(byte)0x48,(byte)0x86,(byte)0xF7,(byte)0x0D,(byte)0x01,(byte)0x01,(byte)0x05,(byte)0x05,(byte)0x00,(byte)0x03,(byte)0x81,(byte)0x81,(byte)0x00,(byte)0x80,(byte)0xA3,(byte)0x0F,(byte)0x23,(byte)0xD4,(byte)0xA7,(byte)0x10,(byte)0xDB,(byte)0xFD,(byte)0x16,(byte)0x79,(byte)0xD5,(byte)0xCA,(byte)0xD9,(byte)0xA7,(byte)0x9F,(byte)0xBB,(byte)0x9F,(byte)0x25,(byte)0xF1,(byte)0xEB,(byte)0x94,(byte)0x24,(byte)0xFE,(byte)0xF1,(byte)0xB9,(byte)0xB7,(byte)0xC7,(byte)0x9B,(byte)0xC0,(byte)0x2C,(byte)0xD6,(byte)0x43,(byte)0x68,(byte)0xD0,(byte)0xBD,(byte)0xFF,(byte)0xC9,(byte)0xE6,(byte)0xB6,(byte)0x86,(byte)0xD1,(byte)0xBB,(byte)0x91,(byte)0x9E,(byte)0x8A,(byte)0xBC,(byte)0xEB,(byte)0x0B,(byte)0xB3,(byte)0x37,(byte)0xF0,(byte)0x1F,(byte)0xB1,(byte)0x17,(byte)0xDC,(byte)0x63,(byte)0xB1,(byte)0x0E,(byte)0xE6,(byte)0x8E,(byte)0xD0,(byte)0x0B,(byte)0xEE,(byte)0x05,(byte)0xD4,(byte)0x5F,(byte)0x1A,(byte)0xEE,(byte)0x1B,(byte)0x33,(byte)0x5E,(byte)0xEF,(byte)0xC8,(byte)0x77,(byte)0xFA,(byte)0x09,(byte)0xA1,(byte)0x59,(byte)0x40,(byte)0xF2,(byte)0x4B,(byte)0xC0,(byte)0x26,(byte)0x77,(byte)0x21,(byte)0x91,(byte)0xA9,(byte)0xD5,(byte)0x09,(byte)0xEB,(byte)0x94,(byte)0xAB,(byte)0xF6,(byte)0xC1,(byte)0xC3,(byte)0xEB,(byte)0x96,(byte)0x74,(byte)0x98,(byte)0x89,(byte)0xA1,(byte)0x19,
														(byte)0x48,(byte)0x7A,(byte)0x30,(byte)0xB0,(byte)0x0C,(byte)0x89,(byte)0x2A,(byte)0xCF,(byte)0xCC,(byte)0x59,(byte)0x56,(byte)0x38,(byte)0xF7,(byte)0x62,(byte)0xB8,(byte)0x8C,(byte)0x70,(byte)0xBD,(byte)0x26,(byte)0xB0,(byte)0x1D,(byte)0xBE,(byte)0x7F,(byte)0x7F,(byte)0x2F,(byte)0x31,(byte)0x82,(byte)0x01,(byte)0x92,(byte)0x30,(byte)0x82,(byte)0x01,(byte)0x8E,(byte)0x02,(byte)0x01,(byte)0x01,(byte)0x30,(byte)0x5D,(byte)0x30,(byte)0x50,(byte)0x31,(byte)0x0B,(byte)0x30,(byte)0x09,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x06,(byte)0x13,(byte)0x02,(byte)0x55,(byte)0x53,(byte)0x31,(byte)0x10,(byte)0x30,(byte)0x0E,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x08,(byte)0x13,(byte)0x07,(byte)0x46,(byte)0x6C,(byte)0x6F,(byte)0x72,(byte)0x69,(byte)0x64,(byte)0x61,(byte)0x31,(byte)0x10,(byte)0x30,(byte)0x0E,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x07,(byte)0x13,(byte)0x07,(byte)0x4F,(byte)0x72,(byte)0x6C,(byte)0x61,(byte)0x6E,(byte)0x64,(byte)0x6F,(byte)0x31,(byte)0x0C,(byte)0x30,(byte)0x0A,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x0A,(byte)0x13,(byte)0x03,(byte)0x55,(byte)0x43,(byte)0x46,(byte)0x31,(byte)0x0F,(byte)0x30,(byte)0x0D,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x03,(byte)0x13,(byte)0x06,(byte)0x52,(byte)0x6F,(byte)0x6F,(byte)0x74,(byte)0x43,(byte)0x41,(byte)0x02,(byte)0x09,(byte)0x00,(byte)0xD8,(byte)0xAA,(byte)0x3B,(byte)0x5B,(byte)0x10,(byte)0xD6,(byte)0xC1,(byte)0xD8,(byte)0x30,(byte)0x09,(byte)0x06,(byte)0x05,(byte)0x2B,(byte)0x0E,(byte)0x03,(byte)0x02,(byte)0x1A,
														(byte)0x05,(byte)0x00,(byte)0xA0,(byte)0x81,(byte)0x8C,(byte)0x30,(byte)0x1A,(byte)0x06,(byte)0x09,(byte)0x2A,(byte)0x86,(byte)0x48,(byte)0x86,(byte)0xF7,(byte)0x0D,(byte)0x01,(byte)0x09,(byte)0x03,(byte)0x31,(byte)0x0D,(byte)0x06,(byte)0x0B,(byte)0x2A,(byte)0x86,(byte)0x48,(byte)0x86,(byte)0xF7,(byte)0x0D,(byte)0x01,(byte)0x09,(byte)0x10,(byte)0x01,(byte)0x04,(byte)0x30,(byte)0x1C,(byte)0x06,(byte)0x09,(byte)0x2A,(byte)0x86,(byte)0x48,(byte)0x86,(byte)0xF7,(byte)0x0D,(byte)0x01,(byte)0x09,(byte)0x05,(byte)0x31,(byte)0x0F,(byte)0x17,(byte)0x0D,(byte)0x31,(byte)0x37,(byte)0x30,(byte)0x37,(byte)0x32,(byte)0x31,(byte)0x30,(byte)0x30,(byte)0x32,(byte)0x31,(byte)0x31,(byte)0x36,(byte)0x5A,(byte)0x30,(byte)0x23,(byte)0x06,(byte)0x09,(byte)0x2A,(byte)0x86,(byte)0x48,(byte)0x86,(byte)0xF7,(byte)0x0D,(byte)0x01,(byte)0x09,(byte)0x04,(byte)0x31,(byte)0x16,(byte)0x04,(byte)0x14,(byte)0x29,(byte)0xF1,(byte)0x9B,(byte)0x49,(byte)0x77,(byte)0x46,(byte)0xE6,(byte)0xA5,(byte)0xFE,(byte)0x9C,(byte)0xCA,(byte)0xCC,(byte)0x07,(byte)0x00,(byte)0x18,(byte)0xAF,(byte)0x05,(byte)0xEB,(byte)0xE7,(byte)0xCE,(byte)0x30,(byte)0x2B,(byte)0x06,(byte)0x0B,(byte)0x2A,(byte)0x86,(byte)0x48,(byte)0x86,(byte)0xF7,(byte)0x0D,(byte)0x01,(byte)0x09,(byte)0x10,(byte)0x02,(byte)0x0C,(byte)0x31,(byte)0x1C,(byte)0x30,(byte)0x1A,(byte)0x30,(byte)0x18,(byte)0x30,(byte)0x16,(byte)0x04,(byte)0x14,(byte)0x37,(byte)0x75,(byte)0x5C,(byte)0x4F,(byte)0x43,(byte)0x63,(byte)0x9B,(byte)0x8C,(byte)0xC8,(byte)0x0F,(byte)0x1B,(byte)0xDE,(byte)0xD1,(byte)0x13,(byte)0x1B,
														(byte)0x1D,(byte)0xB8,(byte)0xBC,(byte)0x83,(byte)0xB0,(byte)0x30,(byte)0x0D,(byte)0x06,(byte)0x09,(byte)0x2A,(byte)0x86,(byte)0x48,(byte)0x86,(byte)0xF7,(byte)0x0D,(byte)0x01,(byte)0x01,(byte)0x01,(byte)0x05,(byte)0x00,(byte)0x04,(byte)0x81,(byte)0x80,(byte)0x91,(byte)0x12,(byte)0xC6,(byte)0x2F,(byte)0x62,(byte)0x41,(byte)0x86,(byte)0xBA,(byte)0xC1,(byte)0xDC,(byte)0x1A,(byte)0x38,(byte)0x03,(byte)0xF5,(byte)0xEE,(byte)0x63,(byte)0xBA,(byte)0x3B,(byte)0x22,(byte)0x14,(byte)0xCF,(byte)0xF3,(byte)0x8C,(byte)0x03,(byte)0x52,(byte)0xDE,(byte)0x65,(byte)0x2A,(byte)0x29,(byte)0x2D,(byte)0x28,(byte)0x19,(byte)0x9F,(byte)0x60,(byte)0x2D,(byte)0x38,(byte)0x5E,(byte)0x54,(byte)0x6B,(byte)0xC4,(byte)0xC6,(byte)0xA4,(byte)0x85,(byte)0x79,(byte)0x2B,(byte)0x55,(byte)0x2A,(byte)0xFF,(byte)0x37,(byte)0x48,(byte)0xA7,(byte)0x37,(byte)0xE5,(byte)0xFC,(byte)0xBA,(byte)0x57,(byte)0xC2,(byte)0xD7,(byte)0x6B,(byte)0x2C,(byte)0xD7,(byte)0xB3,(byte)0xAC,(byte)0xA7,(byte)0x8B,(byte)0x7B,(byte)0x89,(byte)0xAC,(byte)0x07,(byte)0x68,(byte)0xFE,(byte)0x70,(byte)0xB2,(byte)0xD1,(byte)0x07,(byte)0x8B,(byte)0x78,(byte)0xE6,(byte)0x53,(byte)0x7E,(byte)0xCB,(byte)0xB9,(byte)0xFF,(byte)0x06,(byte)0xB6,(byte)0xEC,(byte)0x0C,(byte)0xC2,(byte)0x9F,(byte)0xA1,(byte)0x8A,(byte)0x1D,(byte)0x07,(byte)0xE4,(byte)0xBD,(byte)0xA3,(byte)0x7E,(byte)0x8A,(byte)0x1A,(byte)0xBF,(byte)0x9D,(byte)0x6A,(byte)0xF0,(byte)0x5D,(byte)0xE4,(byte)0xCA,(byte)0x5F,(byte)0x8F,(byte)0x4E,(byte)0x3B,(byte)0xAF,(byte)0x21,(byte)0xB5,(byte)0x12,(byte)0xAA,(byte)0xD6,(byte)0xAF,
														(byte)0x4F,(byte)0xF0,(byte)0x41,(byte)0x47,(byte)0xE8,(byte)0xB1,(byte)0x54,(byte)0xDC,(byte)0x6D,(byte)0x86,(byte)0xD2};
    private static final byte[] cardPrivateKeyModulus2 = new byte[]{(byte)0xA2,(byte)0x7D,(byte)0x87,(byte)0x42,(byte)0x64,(byte)0x6C,(byte)0xA8,(byte)0x55,(byte)0x95,(byte)0xE9,(byte)0xD9,(byte)0x40,(byte)0x97,(byte)0x4A,(byte)0xCE,(byte)0xE4,(byte)0x59,(byte)0xCA,(byte)0xCF,(byte)0x6A,(byte)0x87,(byte)0x28,(byte)0x6A,(byte)0xB1,(byte)0x43,(byte)0x07,(byte)0xD3,(byte)0x8B,(byte)0xC9,(byte)0xD6,(byte)0xCD,(byte)0xE9,(byte)0x1D,(byte)0x5C,(byte)0x32,(byte)0xCD,(byte)0xEF,(byte)0x54,(byte)0x06,(byte)0xD7,(byte)0xE4,(byte)0xA7,(byte)0x13,(byte)0xBA,(byte)0x24,(byte)0x8C,(byte)0x3A,(byte)0x24,(byte)0x5B,(byte)0xE7,(byte)0x81,(byte)0x93,(byte)0x56,(byte)0x1A,(byte)0x5A,(byte)0x4A,(byte)0xF3,(byte)0x71,(byte)0x6B,(byte)0xD9,(byte)0xFC,(byte)0x8B,(byte)0x08,(byte)0x57,(byte)0x72,(byte)0xFB,(byte)0x30,(byte)0x06,(byte)0x72,(byte)0x38,(byte)0x50,(byte)0xDA,(byte)0x0D,(byte)0x62,(byte)0x87,(byte)0xE4,(byte)0xD1,(byte)0xF4,(byte)0x9E,(byte)0x85,(byte)0x42,(byte)0x83,(byte)0xC1,(byte)0x6A,(byte)0x4B,(byte)0xCA,(byte)0xEE,(byte)0x23,(byte)0xB4,(byte)0xE2,(byte)0x61,(byte)0x87,(byte)0x64,(byte)0x3F,(byte)0xF9,(byte)0xAF,(byte)0x24,(byte)0xFE,(byte)0xD9,(byte)0x27,(byte)0xBD,(byte)0xA0,(byte)0x72,(byte)0x30,(byte)0x9B,(byte)0x13,(byte)0x00,(byte)0x81,(byte)0xCF,(byte)0x86,(byte)0x95,(byte)0x99,(byte)0xF7,(byte)0x91,(byte)0xD7,(byte)0x12,(byte)0x61,(byte)0x84,(byte)0xD6,(byte)0x4E,(byte)0x27,(byte)0xAF,(byte)0xBB,(byte)0xEC,(byte)0xB3,(byte)0x0B,(byte)0x75,(byte)0xBE,(byte)0xE0,(byte)0xF7,(byte)0x56,(byte)0xBD,(byte)0xC4,(byte)0x75,(byte)0x36,(byte)0x60,(byte)0x0B,(byte)0xB2,(byte)0x78,(byte)0x3A,(byte)0xA6,(byte)0x2F,(byte)0x9E,(byte)0xCD,(byte)0x26,(byte)0x27,(byte)0xB4,(byte)0xA0,(byte)0x34,(byte)0x6A,(byte)0x79,(byte)0xEC,(byte)0xE8,(byte)0x04,(byte)0x8D,(byte)0xA9,(byte)0xC5,(byte)0x23,(byte)0x55,(byte)0xF2,(byte)0x16,(byte)0x69,(byte)0x48,(byte)0x9F,(byte)0x0F,(byte)0xFF,(byte)0x18,(byte)0x4A,(byte)0x67,(byte)0x9E,(byte)0xE5,(byte)0xB2,(byte)0x33,(byte)0x13,(byte)0xA2,(byte)0xC0,(byte)0xF0,(byte)0xE1,(byte)0x82,(byte)0xC9,(byte)0x33,(byte)0x6A,(byte)0x66,(byte)0xD8,(byte)0x77,(byte)0xA4,(byte)0x96,(byte)0x9A,(byte)0x79,(byte)0x02,(byte)0xEA,(byte)0xF7,(byte)0x62,(byte)0x1C,(byte)0x4C,(byte)0xAB,(byte)0x85,(byte)0x6F,(byte)0x4E,(byte)0xAE,(byte)0xCE,(byte)0x0F,(byte)0x67,(byte)0xE6,(byte)0x68,(byte)0x47,(byte)0x23,(byte)0x52,(byte)0xFE,(byte)0x95,(byte)0x28,(byte)0xD8,(byte)0x63,(byte)0x9F,(byte)0x53,(byte)0x88,(byte)0xEA,(byte)0x2F,(byte)0x5B,(byte)0xAE,(byte)0x2B,(byte)0xED,(byte)0x34,(byte)0xC6,(byte)0x8C,(byte)0xE8,(byte)0xAF,(byte)0xB0,(byte)0x5D,(byte)0x8B,(byte)0x58,(byte)0x5D,(byte)0xB8,(byte)0xFF,(byte)0x75,(byte)0x71,(byte)0xB2,(byte)0xE4,(byte)0x96,(byte)0xA6,(byte)0x38,(byte)0x32,(byte)0x8A,(byte)0x35,(byte)0xAE,(byte)0x10,(byte)0xF6,(byte)0xC5,(byte)0x8C,(byte)0xD9,(byte)0x89,(byte)0xB4,(byte)0xD1,(byte)0x9F,(byte)0xDB,(byte)0x9F};
	private static final byte[] cardPrivateKeyExponent2 = new byte[]{(byte)0x90,(byte)0x93,(byte)0x0D,(byte)0xF0,(byte)0xF5,(byte)0xB7,(byte)0x74,(byte)0x03,(byte)0x4A,(byte)0x72,(byte)0x99,(byte)0xF9,(byte)0x8D,(byte)0x63,(byte)0x63,(byte)0x37,(byte)0xEB,(byte)0xE8,(byte)0xB6,(byte)0xA9,(byte)0xFA,(byte)0xFD,(byte)0xEC,(byte)0x08,(byte)0x32,(byte)0x32,(byte)0xD9,(byte)0x77,(byte)0x8C,(byte)0x2B,(byte)0xD2,(byte)0x63,(byte)0xF2,(byte)0xDA,(byte)0xA0,(byte)0xDD,(byte)0x78,(byte)0x6F,(byte)0x13,(byte)0xF3,(byte)0xAD,(byte)0x9F,(byte)0x36,(byte)0xBF,(byte)0x2D,(byte)0x5B,(byte)0x93,(byte)0x33,(byte)0xDC,(byte)0x8D,(byte)0xDC,(byte)0x4D,(byte)0x82,(byte)0x93,(byte)0xC9,(byte)0xF8,(byte)0xDC,(byte)0x27,(byte)0xF3,(byte)0xA5,(byte)0x2D,(byte)0xBD,(byte)0x6A,(byte)0xBB,(byte)0x9C,(byte)0x33,(byte)0x80,(byte)0xA4,(byte)0x8B,(byte)0xA6,(byte)0x2D,(byte)0xD2,(byte)0x05,(byte)0x8C,(byte)0xC0,(byte)0x8A,(byte)0xC8,(byte)0x80,(byte)0x55,(byte)0x37,(byte)0x0E,(byte)0x5A,(byte)0x7A,(byte)0x92,(byte)0x20,(byte)0x43,(byte)0xBB,(byte)0xA5,(byte)0x0B,(byte)0x81,(byte)0x4C,(byte)0xF3,(byte)0x91,(byte)0x30,(byte)0x16,(byte)0xF1,(byte)0x4E,(byte)0x02,(byte)0x6E,(byte)0xA6,(byte)0x9C,(byte)0x63,(byte)0x10,(byte)0x96,(byte)0xCC,(byte)0xB3,(byte)0x98,(byte)0x84,(byte)0xE7,(byte)0x67,(byte)0xC0,(byte)0xDE,(byte)0x10,(byte)0x57,(byte)0xB3,(byte)0xBB,(byte)0xC8,(byte)0x06,(byte)0xD0,(byte)0x43,(byte)0x13,(byte)0xAE,(byte)0x99,(byte)0x8F,(byte)0x5E,(byte)0x32,(byte)0xF9,(byte)0x1C,(byte)0x64,(byte)0x3A,(byte)0xBA,(byte)0x06,(byte)0x18,(byte)0xBD,(byte)0xD4,(byte)0xD9,(byte)0x26,(byte)0x65,(byte)0xB4,(byte)0xC1,(byte)0x11,(byte)0x60,(byte)0x84,(byte)0x6E,(byte)0xED,(byte)0x6D,(byte)0x74,(byte)0x31,(byte)0x7E,(byte)0xC5,(byte)0x15,(byte)0xC5,(byte)0x54,(byte)0x92,(byte)0x04,(byte)0x00,(byte)0x6D,(byte)0xEB,(byte)0x49,(byte)0xC1,(byte)0x64,(byte)0xD7,(byte)0xAD,(byte)0x37,(byte)0x6F,(byte)0x04,(byte)0x45,(byte)0x0C,(byte)0xBC,(byte)0x5F,(byte)0xD6,(byte)0x15,(byte)0x21,(byte)0x1A,(byte)0x89,(byte)0x5E,(byte)0x83,(byte)0xB4,(byte)0x56,(byte)0xFE,(byte)0x5B,(byte)0xF6,(byte)0x85,(byte)0x80,(byte)0x90,(byte)0x46,(byte)0x47,(byte)0x2E,(byte)0x6E,(byte)0x3B,(byte)0x58,(byte)0xEC,(byte)0x7D,(byte)0x13,(byte)0x1C,(byte)0x40,(byte)0x9C,(byte)0x62,(byte)0x60,(byte)0xCE,(byte)0x98,(byte)0x56,(byte)0xFA,(byte)0x83,(byte)0x61,(byte)0xF6,(byte)0xA7,(byte)0x72,(byte)0xB8,(byte)0xF7,(byte)0xFA,(byte)0x47,(byte)0xEC,(byte)0x27,(byte)0x20,(byte)0xEF,(byte)0xA0,(byte)0xDF,(byte)0x33,(byte)0xE9,(byte)0xEC,(byte)0xCD,(byte)0x98,(byte)0x38,(byte)0xF1,(byte)0x53,(byte)0x43,(byte)0x4D,(byte)0x1F,(byte)0xDD,(byte)0xDB,(byte)0x4A,(byte)0xF3,(byte)0xC8,(byte)0xFE,(byte)0x7B,(byte)0x77,(byte)0xDF,(byte)0xE4,(byte)0xCC,(byte)0xE4,(byte)0xFB,(byte)0x2F,(byte)0x17,(byte)0x52,(byte)0x82,(byte)0x95,(byte)0xCF,(byte)0x93,(byte)0xE9,(byte)0xC8,(byte)0xCE,(byte)0x15,(byte)0xC1,(byte)0x3C,(byte)0x91};
	private static final byte[] cardPrivateCrtKeyP2 = new byte[]{(byte)0xD7,(byte)0xD1,(byte)0x89,(byte)0x8B,(byte)0xA1,(byte)0xFF,(byte)0x08,(byte)0x53,(byte)0xDB,(byte)0x0F,(byte)0x3C,(byte)0x63,(byte)0x26,(byte)0xC3,(byte)0x2D,(byte)0xFF,(byte)0xDE,(byte)0x7D,(byte)0xA9,(byte)0x52,(byte)0x1B,(byte)0x37,(byte)0xA3,(byte)0x4D,(byte)0xFA,(byte)0xA6,(byte)0xED,(byte)0xF4,(byte)0xBD,(byte)0x9D,(byte)0xAE,(byte)0x1A,(byte)0xB4,(byte)0x48,(byte)0xEA,(byte)0x9C,(byte)0xCB,(byte)0x16,(byte)0x50,(byte)0x0C,(byte)0xA4,(byte)0x94,(byte)0xA7,(byte)0xDF,(byte)0x14,(byte)0x06,(byte)0x1A,(byte)0xD0,(byte)0x2F,(byte)0x7B,(byte)0xAE,(byte)0x31,(byte)0xEB,(byte)0x81,(byte)0xD9,(byte)0xA6,(byte)0x65,(byte)0x4E,(byte)0x76,(byte)0x63,(byte)0x4F,(byte)0xF8,(byte)0x3C,(byte)0x42,(byte)0x0B,(byte)0x77,(byte)0x16,(byte)0xF5,(byte)0x99,(byte)0x5E,(byte)0xFE,(byte)0x4E,(byte)0x23,(byte)0xD6,(byte)0xDB,(byte)0x7E,(byte)0x93,(byte)0x18,(byte)0x04,(byte)0xF8,(byte)0x60,(byte)0x6C,(byte)0xD4,(byte)0x5E,(byte)0x93,(byte)0xCD,(byte)0x73,(byte)0x8A,(byte)0x5D,(byte)0xC2,(byte)0xF2,(byte)0x60,(byte)0x96,(byte)0x51,(byte)0x80,(byte)0x10,(byte)0xCF,(byte)0x1E,(byte)0x5D,(byte)0x6D,(byte)0x85,(byte)0x7F,(byte)0xCB,(byte)0x21,(byte)0xFD,(byte)0xFF,(byte)0x17,(byte)0x43,(byte)0xB9,(byte)0x22,(byte)0xCE,(byte)0x69,(byte)0x41,(byte)0x51,(byte)0x0D,(byte)0x2E,(byte)0x13,(byte)0x0A,(byte)0x86,(byte)0xC4,(byte)0x0A,(byte)0x49,(byte)0xAE,(byte)0x15,(byte)0x71,(byte)0xCF,(byte)0x31,(byte)0x87};
	private static final byte[] cardPrivateCrtKeyQ2 = new byte[]{(byte)0xC0,(byte)0xBE,(byte)0x3C,(byte)0x00,(byte)0x8F,(byte)0x98,(byte)0x47,(byte)0xE0,(byte)0x24,(byte)0x3A,(byte)0x1E,(byte)0x06,(byte)0x31,(byte)0x20,(byte)0x11,(byte)0x92,(byte)0x2A,(byte)0x72,(byte)0x07,(byte)0xD5,(byte)0x25,(byte)0xAB,(byte)0x32,(byte)0xFB,(byte)0x2A,(byte)0x37,(byte)0xAD,(byte)0x28,(byte)0x2C,(byte)0x41,(byte)0xAE,(byte)0xCA,(byte)0xE1,(byte)0xB2,(byte)0xB5,(byte)0x0D,(byte)0xCD,(byte)0x24,(byte)0xFF,(byte)0xA4,(byte)0x4E,(byte)0xB9,(byte)0xFE,(byte)0x95,(byte)0x50,(byte)0x83,(byte)0xD0,(byte)0xC5,(byte)0x26,(byte)0xB1,(byte)0xD8,(byte)0x36,(byte)0xD7,(byte)0x25,(byte)0x32,(byte)0x4A,(byte)0x68,(byte)0x63,(byte)0xF5,(byte)0x20,(byte)0x5D,(byte)0x43,(byte)0xC6,(byte)0xE9,(byte)0x9B,(byte)0xDA,(byte)0xE4,(byte)0x72,(byte)0xC2,(byte)0xFA,(byte)0xD3,(byte)0xC6,(byte)0x09,(byte)0x03,(byte)0x40,(byte)0x5E,(byte)0x85,(byte)0xF8,(byte)0x77,(byte)0x86,(byte)0xF1,(byte)0xC0,(byte)0xEF,(byte)0x1E,(byte)0x56,(byte)0xC7,(byte)0xC4,(byte)0xAA,(byte)0x83,(byte)0xFB,(byte)0x55,(byte)0x22,(byte)0x39,(byte)0x1E,(byte)0xF2,(byte)0xAF,(byte)0x4C,(byte)0x68,(byte)0x21,(byte)0x6E,(byte)0x57,(byte)0x80,(byte)0xC5,(byte)0x4E,(byte)0x74,(byte)0x5D,(byte)0xED,(byte)0x68,(byte)0xD7,(byte)0xCA,(byte)0xD9,(byte)0x77,(byte)0x67,(byte)0x6B,(byte)0x91,(byte)0xFE,(byte)0xCE,(byte)0x0B,(byte)0x6F,(byte)0xC5,(byte)0xC2,(byte)0x87,(byte)0xDD,(byte)0x4F,(byte)0x19,(byte)0xB6,(byte)0xEB,(byte)0x29};
	private static final byte[] cardPrivateCrtKeyDP2 = new byte[]{(byte)0xC7,(byte)0x23,(byte)0x99,(byte)0x7F,(byte)0x36,(byte)0x63,(byte)0x55,(byte)0x13,(byte)0xCB,(byte)0x36,(byte)0x2B,(byte)0xCA,(byte)0x71,(byte)0xA1,(byte)0xF7,(byte)0x77,(byte)0xF9,(byte)0x9C,(byte)0x89,(byte)0xF8,(byte)0x31,(byte)0x15,(byte)0x0D,(byte)0xA2,(byte)0x8E,(byte)0x7E,(byte)0x29,(byte)0x63,(byte)0x82,(byte)0xF3,(byte)0x54,(byte)0x0B,(byte)0x5F,(byte)0xFF,(byte)0x48,(byte)0x3C,(byte)0x95,(byte)0x48,(byte)0x69,(byte)0x64,(byte)0xC1,(byte)0x18,(byte)0x4A,(byte)0x2E,(byte)0x15,(byte)0x13,(byte)0xEC,(byte)0xF9,(byte)0xDC,(byte)0x56,(byte)0x8B,(byte)0x4D,(byte)0x94,(byte)0xB9,(byte)0xA4,(byte)0x53,(byte)0x5D,(byte)0x77,(byte)0x20,(byte)0xD6,(byte)0x52,(byte)0x9C,(byte)0x03,(byte)0x3E,(byte)0x0D,(byte)0xC6,(byte)0x3D,(byte)0x71,(byte)0x31,(byte)0xAB,(byte)0xED,(byte)0x8B,(byte)0xBC,(byte)0x96,(byte)0x2C,(byte)0xC2,(byte)0x86,(byte)0x87,(byte)0xCB,(byte)0x4E,(byte)0x43,(byte)0xEB,(byte)0x27,(byte)0xAA,(byte)0x7D,(byte)0x47,(byte)0x3E,(byte)0x2D,(byte)0x96,(byte)0x86,(byte)0xA3,(byte)0x8F,(byte)0x6C,(byte)0x24,(byte)0x97,(byte)0xBE,(byte)0xEA,(byte)0xDE,(byte)0x61,(byte)0xE7,(byte)0x05,(byte)0x1F,(byte)0xFE,(byte)0x17,(byte)0xC7,(byte)0x7E,(byte)0xF1,(byte)0xC0,(byte)0x93,(byte)0xBC,(byte)0x02,(byte)0x2A,(byte)0x2D,(byte)0x12,(byte)0xD4,(byte)0xCE,(byte)0x86,(byte)0xD3,(byte)0x57,(byte)0xB6,(byte)0xDC,(byte)0xA7,(byte)0x4F,(byte)0xF2,(byte)0x89,(byte)0xA9,(byte)0x5D,(byte)0x51};
	private static final byte[] cardPrivateCrtKeyDQ2 = new byte[]{(byte)0x1B,(byte)0xE3,(byte)0xAA,(byte)0xF4,(byte)0xFD,(byte)0xD2,(byte)0x30,(byte)0x1C,(byte)0x4B,(byte)0xC1,(byte)0xA9,(byte)0x14,(byte)0x86,(byte)0x49,(byte)0x38,(byte)0xA1,(byte)0xA8,(byte)0xC8,(byte)0xA5,(byte)0x3F,(byte)0x7F,(byte)0x5A,(byte)0xDD,(byte)0x5E,(byte)0xA0,(byte)0x86,(byte)0x3B,(byte)0xE5,(byte)0x03,(byte)0x3A,(byte)0x61,(byte)0xDB,(byte)0x73,(byte)0x7B,(byte)0x13,(byte)0x5D,(byte)0xB2,(byte)0xE0,(byte)0x76,(byte)0xA9,(byte)0x44,(byte)0xC6,(byte)0xFF,(byte)0x02,(byte)0x86,(byte)0x0A,(byte)0xFC,(byte)0xCB,(byte)0x7A,(byte)0x44,(byte)0xE3,(byte)0x9F,(byte)0x53,(byte)0xD4,(byte)0x4B,(byte)0x09,(byte)0x9F,(byte)0x3F,(byte)0x4F,(byte)0x79,(byte)0xE6,(byte)0x64,(byte)0xE7,(byte)0x44,(byte)0x68,(byte)0x4B,(byte)0xED,(byte)0x20,(byte)0x79,(byte)0xFC,(byte)0x27,(byte)0x66,(byte)0x91,(byte)0x69,(byte)0x4A,(byte)0x08,(byte)0x23,(byte)0x64,(byte)0x87,(byte)0x8F,(byte)0x1C,(byte)0x2E,(byte)0x29,(byte)0xAB,(byte)0x7F,(byte)0x2D,(byte)0x1A,(byte)0xD4,(byte)0xFD,(byte)0x92,(byte)0x01,(byte)0x88,(byte)0x99,(byte)0x31,(byte)0x54,(byte)0x36,(byte)0x6F,(byte)0x5C,(byte)0xE5,(byte)0xF1,(byte)0x7C,(byte)0x71,(byte)0xE2,(byte)0x9A,(byte)0xEE,(byte)0x95,(byte)0xA4,(byte)0xC3,(byte)0xB5,(byte)0xED,(byte)0xE1,(byte)0x37,(byte)0xB8,(byte)0xDC,(byte)0x44,(byte)0xDC,(byte)0xD4,(byte)0xDD,(byte)0xAC,(byte)0xC7,(byte)0xB5,(byte)0xD5,(byte)0x48,(byte)0xFD,(byte)0xA8,(byte)0x1F,(byte)0xE2,(byte)0xB9};
	private static final byte[] cardPrivateCrtKeyPQ2 = new byte[]{(byte)0x0E,(byte)0xB1,(byte)0x27,(byte)0xB2,(byte)0x94,(byte)0x23,(byte)0x00,(byte)0x01,(byte)0x81,(byte)0x51,(byte)0x36,(byte)0xF0,(byte)0x97,(byte)0xB0,(byte)0xB7,(byte)0xEC,(byte)0x5F,(byte)0x6A,(byte)0xB5,(byte)0x06,(byte)0xA2,(byte)0x39,(byte)0x63,(byte)0x6A,(byte)0x44,(byte)0x9E,(byte)0x20,(byte)0x4D,(byte)0xDA,(byte)0x77,(byte)0x1E,(byte)0xA6,(byte)0xAF,(byte)0x42,(byte)0x26,(byte)0x1C,(byte)0xF3,(byte)0xAB,(byte)0x93,(byte)0x75,(byte)0x5A,(byte)0x3F,(byte)0xAF,(byte)0xA5,(byte)0xFF,(byte)0xAD,(byte)0xD2,(byte)0x7E,(byte)0x3B,(byte)0xF1,(byte)0xCF,(byte)0xDD,(byte)0x09,(byte)0x03,(byte)0x42,(byte)0x1B,(byte)0xBB,(byte)0xC8,(byte)0x8B,(byte)0x1E,(byte)0xAD,(byte)0x9E,(byte)0x67,(byte)0xBB,(byte)0x5E,(byte)0x29,(byte)0xD0,(byte)0x18,(byte)0x26,(byte)0x4E,(byte)0xBC,(byte)0xA6,(byte)0x54,(byte)0xB1,(byte)0x25,(byte)0xC6,(byte)0x80,(byte)0x68,(byte)0x03,(byte)0x36,(byte)0x1F,(byte)0x4F,(byte)0x48,(byte)0x50,(byte)0xAA,(byte)0x5D,(byte)0xDA,(byte)0x36,(byte)0x81,(byte)0x7B,(byte)0x58,(byte)0xD4,(byte)0x96,(byte)0x85,(byte)0x60,(byte)0xEA,(byte)0x9B,(byte)0x64,(byte)0x46,(byte)0xC0,(byte)0xF2,(byte)0xC3,(byte)0x42,(byte)0x31,(byte)0x30,(byte)0x38,(byte)0x9E,(byte)0xF3,(byte)0x34,(byte)0x02,(byte)0x65,(byte)0x13,(byte)0xA8,(byte)0xDD,(byte)0xE5,(byte)0x79,(byte)0xBF,(byte)0x4C,(byte)0x52,(byte)0x38,(byte)0x04,(byte)0x56,(byte)0x2F,(byte)0x2E,(byte)0x37,(byte)0x65,(byte)0xAD,(byte)0x0C};
	private static final byte[] caPublicKeyModulus2 = new byte[]{(byte)0xD2,(byte)0x9F,(byte)0x3C,(byte)0x9D,(byte)0x22,(byte)0xC3,(byte)0x73,(byte)0x12,(byte)0xB7,(byte)0x49,(byte)0x98,(byte)0xD8,(byte)0x5D,(byte)0x90,(byte)0xAA,(byte)0x63,(byte)0x68,(byte)0x12,(byte)0xC5,(byte)0xED,(byte)0x70,(byte)0x9C,(byte)0xD2,(byte)0x0D,(byte)0x33,(byte)0xA8,(byte)0x52,(byte)0xB6,(byte)0x57,(byte)0x4B,(byte)0x46,(byte)0xD6,(byte)0x85,(byte)0xA0,(byte)0x5E,(byte)0x7D,(byte)0xBC,(byte)0xCF,(byte)0x15,(byte)0xA3,(byte)0x7B,(byte)0x68,(byte)0x2B,(byte)0x4C,(byte)0x54,(byte)0xFE,(byte)0x1E,(byte)0x08,(byte)0x3E,(byte)0xF1,(byte)0xD6,(byte)0x80,(byte)0xC0,(byte)0x8D,(byte)0xB5,(byte)0x33,(byte)0x5B,(byte)0x86,(byte)0x8D,(byte)0x71,(byte)0xD0,(byte)0xCE,(byte)0x1A,(byte)0x2E,(byte)0x08,(byte)0xF0,(byte)0x07,(byte)0x8D,(byte)0x40,(byte)0xA5,(byte)0xAC,(byte)0xBB,(byte)0x28,(byte)0x96,(byte)0xFF,(byte)0x83,(byte)0xEC,(byte)0x92,(byte)0xE6,(byte)0xCE,(byte)0xD7,(byte)0x9A,(byte)0x69,(byte)0x02,(byte)0xDF,(byte)0xA4,(byte)0xB6,(byte)0x25,(byte)0x9F,(byte)0xA4,(byte)0xD9,(byte)0xA3,(byte)0x51,(byte)0x83,(byte)0x96,(byte)0x65,(byte)0x67,(byte)0x8F,(byte)0x6C,(byte)0x4D,(byte)0x6D,(byte)0x80,(byte)0xF7,(byte)0x85,(byte)0x7A,(byte)0xB8,(byte)0x54,(byte)0xF2,(byte)0x14,(byte)0x4E,(byte)0x2D,(byte)0xC5,(byte)0x88,(byte)0x65,(byte)0xFC,(byte)0xC7,(byte)0x9E,(byte)0x41,(byte)0x64,(byte)0x91,(byte)0xC2,(byte)0x53,(byte)0x86,(byte)0x9A,(byte)0xD4,(byte)0x09,(byte)0xA2,(byte)0x16,(byte)0xEE,(byte)0xE5,(byte)0xBE,(byte)0xED,(byte)0x92,(byte)0xAD,(byte)0xAA,(byte)0x5E,(byte)0x1B,(byte)0x84,(byte)0xE3,(byte)0x63,(byte)0x7A,(byte)0xD6,(byte)0x35,(byte)0x5B,(byte)0xD8,(byte)0x3F,(byte)0x6C,(byte)0x20,(byte)0xEA,(byte)0x21,(byte)0x24,(byte)0x14,(byte)0xA0,(byte)0xE1,(byte)0x39,(byte)0x3C,(byte)0x5F,(byte)0x1B,(byte)0x26,(byte)0xFA,(byte)0x03,(byte)0x0C,(byte)0x04,(byte)0x8E,(byte)0xE4,(byte)0xA4,(byte)0x83,(byte)0x9E,(byte)0x11,(byte)0xF8,(byte)0x4F,(byte)0x0E,(byte)0x27,(byte)0x60,(byte)0x54,(byte)0x42,(byte)0x08,(byte)0xD6,(byte)0xBE,(byte)0x48,(byte)0xA6,(byte)0x23,(byte)0xCA,(byte)0x5E,(byte)0x79,(byte)0x89,(byte)0x65,(byte)0x2D,(byte)0xAD,(byte)0x1F,(byte)0x7C,(byte)0x4C,(byte)0x5A,(byte)0x43,(byte)0x57,(byte)0x1C,(byte)0x7E,(byte)0x9B,(byte)0x13,(byte)0xA0,(byte)0xE3,(byte)0xB0,(byte)0xD3,(byte)0x28,(byte)0xDF,(byte)0x7B,(byte)0x37,(byte)0x36,(byte)0x6A,(byte)0xE4,(byte)0xA9,(byte)0xF3,(byte)0x69,(byte)0xBE,(byte)0xBD,(byte)0x07,(byte)0xD4,(byte)0x1B,(byte)0xCA,(byte)0xAD,(byte)0xA3,(byte)0x1B,(byte)0xAA,(byte)0x10,(byte)0xAB,(byte)0x66,(byte)0x3A,(byte)0xBF,(byte)0xCC,(byte)0x23,(byte)0x24,(byte)0x5C,(byte)0xBB,(byte)0x6A,(byte)0x13,(byte)0xD9,(byte)0x0C,(byte)0x3C,(byte)0xCD,(byte)0x97,(byte)0x59,(byte)0x27,(byte)0x5E,(byte)0xF1,(byte)0x36,(byte)0xC5,(byte)0x4A,(byte)0xE6,(byte)0xE3,(byte)0x49,(byte)0xDC,(byte)0xE2,(byte)0x21,(byte)0xED,(byte)0xA7,(byte)0x5D};
	private static final byte[] caPublicKeyExponent2 = new byte[]{(byte) 0x01,(byte) 0x00,(byte) 0x01};
	private static final byte[] cardCertificate2 = new byte[]{(byte)0x30,(byte)0x82,(byte)0x03,(byte)0x3F,(byte)0x30,(byte)0x82,(byte)0x02,(byte)0x27,(byte)0xA0,(byte)0x03,(byte)0x02,(byte)0x01,(byte)0x02,(byte)0x02,(byte)0x09,(byte)0x00,(byte)0xD9,(byte)0xAD,(byte)0x34,(byte)0xBC,(byte)0x6E,(byte)0x86,(byte)0xF2,(byte)0x47,(byte)0x30,(byte)0x0D,(byte)0x06,(byte)0x09,(byte)0x2A,(byte)0x86,(byte)0x48,(byte)0x86,(byte)0xF7,(byte)0x0D,(byte)0x01,(byte)0x01,(byte)0x05,(byte)0x05,(byte)0x00,(byte)0x30,(byte)0x51,(byte)0x31,(byte)0x0B,(byte)0x30,(byte)0x09,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x06,(byte)0x13,(byte)0x02,(byte)0x55,(byte)0x53,(byte)0x31,(byte)0x10,(byte)0x30,(byte)0x0E,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x08,(byte)0x13,(byte)0x07,(byte)0x46,(byte)0x6C,(byte)0x6F,(byte)0x72,(byte)0x69,(byte)0x64,(byte)0x61,(byte)0x31,(byte)0x10,(byte)0x30,(byte)0x0E,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x07,(byte)0x13,(byte)0x07,(byte)0x4F,(byte)0x72,(byte)0x6C,(byte)0x61,(byte)0x6E,(byte)0x64,(byte)0x6F,(byte)0x31,(byte)0x0C,(byte)0x30,(byte)0x0A,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x0A,(byte)0x13,(byte)0x03,(byte)0x55,(byte)0x43,(byte)0x46,(byte)0x31,(byte)0x10,(byte)0x30,(byte)0x0E,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x03,(byte)0x13,(byte)0x07,(byte)0x52,(byte)0x6F,(byte)0x6F,(byte)0x74,(byte)0x43,(byte)0x41,(byte)0x32,(byte)0x30,(byte)0x1E,(byte)0x17,(byte)0x0D,(byte)0x31,(byte)0x37,(byte)0x30,(byte)0x37,(byte)0x32,(byte)0x31,(byte)0x32,(byte)0x32,(byte)0x35,(byte)0x33,(byte)0x32,(byte)0x30,(byte)0x5A,(byte)0x17,(byte)0x0D,
															  (byte)0x31,(byte)0x38,(byte)0x30,(byte)0x32,(byte)0x30,(byte)0x36,(byte)0x32,(byte)0x32,(byte)0x35,(byte)0x33,(byte)0x32,(byte)0x30,(byte)0x5A,(byte)0x30,(byte)0x51,(byte)0x31,(byte)0x0B,(byte)0x30,(byte)0x09,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x06,(byte)0x13,(byte)0x02,(byte)0x55,(byte)0x53,(byte)0x31,(byte)0x10,(byte)0x30,(byte)0x0E,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x08,(byte)0x13,(byte)0x07,(byte)0x46,(byte)0x6C,(byte)0x6F,(byte)0x72,(byte)0x69,(byte)0x64,(byte)0x61,(byte)0x31,(byte)0x10,(byte)0x30,(byte)0x0E,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x07,(byte)0x13,(byte)0x07,(byte)0x4F,(byte)0x72,(byte)0x6C,(byte)0x61,(byte)0x6E,(byte)0x64,(byte)0x6F,(byte)0x31,(byte)0x0C,(byte)0x30,(byte)0x0A,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x0A,(byte)0x13,(byte)0x03,(byte)0x55,(byte)0x43,(byte)0x46,(byte)0x31,(byte)0x10,(byte)0x30,(byte)0x0E,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x03,(byte)0x13,(byte)0x07,(byte)0x48,(byte)0x6F,(byte)0x73,(byte)0x73,(byte)0x65,(byte)0x69,(byte)0x6E,(byte)0x30,(byte)0x82,(byte)0x01,(byte)0x22,(byte)0x30,(byte)0x0D,(byte)0x06,(byte)0x09,(byte)0x2A,(byte)0x86,(byte)0x48,(byte)0x86,(byte)0xF7,(byte)0x0D,(byte)0x01,(byte)0x01,(byte)0x01,(byte)0x05,(byte)0x00,(byte)0x03,(byte)0x82,(byte)0x01,(byte)0x0F,(byte)0x00,(byte)0x30,(byte)0x82,(byte)0x01,(byte)0x0A,(byte)0x02,(byte)0x82,(byte)0x01,(byte)0x01,(byte)0x00,(byte)0xA2,(byte)0x7D,(byte)0x87,(byte)0x42,(byte)0x64,(byte)0x6C,(byte)0xA8,(byte)0x55,(byte)0x95,(byte)0xE9,(byte)0xD9,(byte)0x40,
															  (byte)0x97,(byte)0x4A,(byte)0xCE,(byte)0xE4,(byte)0x59,(byte)0xCA,(byte)0xCF,(byte)0x6A,(byte)0x87,(byte)0x28,(byte)0x6A,(byte)0xB1,(byte)0x43,(byte)0x07,(byte)0xD3,(byte)0x8B,(byte)0xC9,(byte)0xD6,(byte)0xCD,(byte)0xE9,(byte)0x1D,(byte)0x5C,(byte)0x32,(byte)0xCD,(byte)0xEF,(byte)0x54,(byte)0x06,(byte)0xD7,(byte)0xE4,(byte)0xA7,(byte)0x13,(byte)0xBA,(byte)0x24,(byte)0x8C,(byte)0x3A,(byte)0x24,(byte)0x5B,(byte)0xE7,(byte)0x81,(byte)0x93,(byte)0x56,(byte)0x1A,(byte)0x5A,(byte)0x4A,(byte)0xF3,(byte)0x71,(byte)0x6B,(byte)0xD9,(byte)0xFC,(byte)0x8B,(byte)0x08,(byte)0x57,(byte)0x72,(byte)0xFB,(byte)0x30,(byte)0x06,(byte)0x72,(byte)0x38,(byte)0x50,(byte)0xDA,(byte)0x0D,(byte)0x62,(byte)0x87,(byte)0xE4,(byte)0xD1,(byte)0xF4,(byte)0x9E,(byte)0x85,(byte)0x42,(byte)0x83,(byte)0xC1,(byte)0x6A,(byte)0x4B,(byte)0xCA,(byte)0xEE,(byte)0x23,(byte)0xB4,(byte)0xE2,(byte)0x61,(byte)0x87,(byte)0x64,(byte)0x3F,(byte)0xF9,(byte)0xAF,(byte)0x24,(byte)0xFE,(byte)0xD9,(byte)0x27,(byte)0xBD,(byte)0xA0,(byte)0x72,(byte)0x30,(byte)0x9B,(byte)0x13,(byte)0x00,(byte)0x81,(byte)0xCF,(byte)0x86,(byte)0x95,(byte)0x99,(byte)0xF7,(byte)0x91,(byte)0xD7,(byte)0x12,(byte)0x61,(byte)0x84,(byte)0xD6,(byte)0x4E,(byte)0x27,(byte)0xAF,(byte)0xBB,(byte)0xEC,(byte)0xB3,(byte)0x0B,(byte)0x75,(byte)0xBE,(byte)0xE0,(byte)0xF7,(byte)0x56,(byte)0xBD,(byte)0xC4,(byte)0x75,(byte)0x36,(byte)0x60,(byte)0x0B,(byte)0xB2,(byte)0x78,(byte)0x3A,(byte)0xA6,(byte)0x2F,(byte)0x9E,(byte)0xCD,(byte)0x26,(byte)0x27,(byte)0xB4,(byte)0xA0,(byte)0x34,(byte)0x6A,(byte)0x79,(byte)0xEC,(byte)0xE8,
															  (byte)0x04,(byte)0x8D,(byte)0xA9,(byte)0xC5,(byte)0x23,(byte)0x55,(byte)0xF2,(byte)0x16,(byte)0x69,(byte)0x48,(byte)0x9F,(byte)0x0F,(byte)0xFF,(byte)0x18,(byte)0x4A,(byte)0x67,(byte)0x9E,(byte)0xE5,(byte)0xB2,(byte)0x33,(byte)0x13,(byte)0xA2,(byte)0xC0,(byte)0xF0,(byte)0xE1,(byte)0x82,(byte)0xC9,(byte)0x33,(byte)0x6A,(byte)0x66,(byte)0xD8,(byte)0x77,(byte)0xA4,(byte)0x96,(byte)0x9A,(byte)0x79,(byte)0x02,(byte)0xEA,(byte)0xF7,(byte)0x62,(byte)0x1C,(byte)0x4C,(byte)0xAB,(byte)0x85,(byte)0x6F,(byte)0x4E,(byte)0xAE,(byte)0xCE,(byte)0x0F,(byte)0x67,(byte)0xE6,(byte)0x68,(byte)0x47,(byte)0x23,(byte)0x52,(byte)0xFE,(byte)0x95,(byte)0x28,(byte)0xD8,(byte)0x63,(byte)0x9F,(byte)0x53,(byte)0x88,(byte)0xEA,(byte)0x2F,(byte)0x5B,(byte)0xAE,(byte)0x2B,(byte)0xED,(byte)0x34,(byte)0xC6,(byte)0x8C,(byte)0xE8,(byte)0xAF,(byte)0xB0,(byte)0x5D,(byte)0x8B,(byte)0x58,(byte)0x5D,(byte)0xB8,(byte)0xFF,(byte)0x75,(byte)0x71,(byte)0xB2,(byte)0xE4,(byte)0x96,(byte)0xA6,(byte)0x38,(byte)0x32,(byte)0x8A,(byte)0x35,(byte)0xAE,(byte)0x10,(byte)0xF6,(byte)0xC5,(byte)0x8C,(byte)0xD9,(byte)0x89,(byte)0xB4,(byte)0xD1,(byte)0x9F,(byte)0xDB,(byte)0x9F,(byte)0x02,(byte)0x03,(byte)0x01,(byte)0x00,(byte)0x01,(byte)0xA3,(byte)0x1A,(byte)0x30,(byte)0x18,(byte)0x30,(byte)0x16,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x1D,(byte)0x25,(byte)0x01,(byte)0x01,(byte)0xFF,(byte)0x04,(byte)0x0C,(byte)0x30,(byte)0x0A,(byte)0x06,(byte)0x08,(byte)0x2B,(byte)0x06,(byte)0x01,(byte)0x05,(byte)0x05,(byte)0x07,(byte)0x03,(byte)0x08,(byte)0x30,(byte)0x0D,(byte)0x06,(byte)0x09,(byte)0x2A,
															  (byte)0x86,(byte)0x48,(byte)0x86,(byte)0xF7,(byte)0x0D,(byte)0x01,(byte)0x01,(byte)0x05,(byte)0x05,(byte)0x00,(byte)0x03,(byte)0x82,(byte)0x01,(byte)0x01,(byte)0x00,(byte)0xAB,(byte)0x61,(byte)0x0C,(byte)0xC9,(byte)0x39,(byte)0x37,(byte)0x85,(byte)0x50,(byte)0x0C,(byte)0x2B,(byte)0x4A,(byte)0x9F,(byte)0xF7,(byte)0xDB,(byte)0x10,(byte)0x11,(byte)0x2C,(byte)0x1C,(byte)0x24,(byte)0x57,(byte)0x66,(byte)0x42,(byte)0x53,(byte)0x9C,(byte)0xAF,(byte)0xD5,(byte)0xB8,(byte)0xA5,(byte)0x6B,(byte)0x63,(byte)0x58,(byte)0xD8,(byte)0x40,(byte)0x70,(byte)0x3E,(byte)0x2E,(byte)0x54,(byte)0xBB,(byte)0x85,(byte)0x60,(byte)0xA6,(byte)0xE9,(byte)0x05,(byte)0x6B,(byte)0x90,(byte)0xE3,(byte)0x5C,(byte)0xA6,(byte)0x70,(byte)0xC5,(byte)0xC3,(byte)0xCD,(byte)0x8B,(byte)0x92,(byte)0x27,(byte)0x8E,(byte)0x53,(byte)0xCF,(byte)0x40,(byte)0x16,(byte)0xD3,(byte)0xD1,(byte)0x90,(byte)0xD2,(byte)0x06,(byte)0x70,(byte)0xDE,(byte)0xB4,(byte)0x9A,(byte)0x3B,(byte)0xC7,(byte)0xB6,(byte)0x8E,(byte)0x8A,(byte)0x1A,(byte)0x7C,(byte)0xE4,(byte)0x86,(byte)0xF6,(byte)0xEB,(byte)0x99,(byte)0x7A,(byte)0x96,(byte)0xA0,(byte)0x1E,(byte)0xD7,(byte)0x66,(byte)0xBF,(byte)0x32,(byte)0x16,(byte)0xA8,(byte)0xA3,(byte)0xED,(byte)0x79,(byte)0xD9,(byte)0xF2,(byte)0x0A,(byte)0x8C,(byte)0xB2,(byte)0x9E,(byte)0xB9,(byte)0xB8,(byte)0x3D,(byte)0x09,(byte)0x36,(byte)0x3B,(byte)0xDC,(byte)0xC0,(byte)0xBE,(byte)0x4C,(byte)0x26,(byte)0x01,(byte)0xF9,(byte)0x26,(byte)0x3B,(byte)0x7F,(byte)0x4E,(byte)0x3C,(byte)0x5A,(byte)0x7D,(byte)0x07,(byte)0x2B,(byte)0x94,(byte)0x4C,(byte)0xB4,(byte)0x9A,
															  (byte)0x72,(byte)0xF0,(byte)0x28,(byte)0x56,(byte)0x4D,(byte)0x74,(byte)0x15,(byte)0xD8,(byte)0x68,(byte)0x23,(byte)0xA0,(byte)0x7A,(byte)0xB3,(byte)0x55,(byte)0xA8,(byte)0x83,(byte)0xBA,(byte)0xB0,(byte)0xE0,(byte)0xDF,(byte)0x5A,(byte)0x8D,(byte)0x95,(byte)0xCF,(byte)0xC2,(byte)0x2D,(byte)0x7E,(byte)0x0F,(byte)0x09,(byte)0xA0,(byte)0xAF,(byte)0xBB,(byte)0xE3,(byte)0x6A,(byte)0xD7,(byte)0x95,(byte)0x81,(byte)0x70,(byte)0x9A,(byte)0xB9,(byte)0x2B,(byte)0x6A,(byte)0x76,(byte)0x56,(byte)0x91,(byte)0xDF,(byte)0x76,(byte)0x62,(byte)0x03,(byte)0x94,(byte)0x00,(byte)0xF6,(byte)0x2A,(byte)0xE4,(byte)0x57,(byte)0xDD,(byte)0xD5,(byte)0x11,(byte)0x35,(byte)0xD4,(byte)0x08,(byte)0x66,(byte)0x05,(byte)0xC9,(byte)0xAA,(byte)0x6D,(byte)0x10,(byte)0x8D,(byte)0xFF,(byte)0x16,(byte)0xE1,(byte)0xDF,(byte)0xF4,(byte)0xF7,(byte)0x76,(byte)0x76,(byte)0x64,(byte)0x19,(byte)0xB6,(byte)0xC2,(byte)0xAF,(byte)0x67,(byte)0x24,(byte)0x7A,(byte)0xAB,(byte)0x66,(byte)0x28,(byte)0xB6,(byte)0xF7,(byte)0xDE,(byte)0x5C,(byte)0x72,(byte)0x49,(byte)0x8A,(byte)0xC9,(byte)0x36,(byte)0x05,(byte)0xDC,(byte)0x39,(byte)0x2D,(byte)0x20,(byte)0x93,(byte)0x3C,(byte)0x9C,(byte)0x1D,(byte)0xCD,(byte)0x26,(byte)0x11,(byte)0xB3,(byte)0x52,(byte)0x04,(byte)0x67,(byte)0xE4,(byte)0xC5,(byte)0x1E,(byte)0xC5,(byte)0xF7,(byte)0x6B,(byte)0x9A,(byte)0x56,(byte)0x80,(byte)0xAB,(byte)0x58,(byte)0xF2,(byte)0x23,(byte)0xBE,(byte)0x78,(byte)0xE1,(byte)0xE4,(byte)0xAE};
	private static final byte[] tsrResponseTemplate2 = new byte[]{(byte)0x30,(byte)0x82,(byte)0x05,(byte)0xEF,(byte)0x30,(byte)0x15,(byte)0x02,(byte)0x01,(byte)0x00,(byte)0x30,(byte)0x10,(byte)0x0C,(byte)0x0E,(byte)0x4F,(byte)0x70,(byte)0x65,(byte)0x72,(byte)0x61,(byte)0x74,(byte)0x69,(byte)0x6F,(byte)0x6E,(byte)0x20,(byte)0x4F,(byte)0x6B,(byte)0x61,(byte)0x79,(byte)0x30,(byte)0x82,(byte)0x05,(byte)0xD4,(byte)0x06,(byte)0x09,(byte)0x2A,(byte)0x86,(byte)0x48,(byte)0x86,(byte)0xF7,(byte)0x0D,(byte)0x01,(byte)0x07,(byte)0x02,(byte)0xA0,(byte)0x82,(byte)0x05,(byte)0xC5,(byte)0x30,(byte)0x82,(byte)0x05,(byte)0xC1,(byte)0x02,(byte)0x01,(byte)0x03,(byte)0x31,(byte)0x0B,(byte)0x30,(byte)0x09,(byte)0x06,(byte)0x05,(byte)0x2B,(byte)0x0E,(byte)0x03,(byte)0x02,(byte)0x1A,(byte)0x05,(byte)0x00,(byte)0x30,(byte)0x50,(byte)0x06,(byte)0x0B,(byte)0x2A,(byte)0x86,(byte)0x48,(byte)0x86,(byte)0xF7,(byte)0x0D,(byte)0x01,(byte)0x09,(byte)0x10,(byte)0x01,(byte)0x04,(byte)0xA0,(byte)0x41,(byte)0x04,(byte)0x3F,(byte)0x30,(byte)0x3D,(byte)0x02,(byte)0x01,(byte)0x01,(byte)0x06,(byte)0x01,(byte)0x2A,(byte)0x30,(byte)0x21,(byte)0x30,(byte)0x09,(byte)0x06,(byte)0x05,(byte)0x2B,(byte)0x0E,(byte)0x03,(byte)0x02,(byte)0x1A,(byte)0x05,(byte)0x00,(byte)0x04,(byte)0x14,(byte)0x8D,(byte)0xD5,(byte)0xC6,(byte)0x07,(byte)0xD2,(byte)0xE1,(byte)0xB9,(byte)0xC0,(byte)0xED,(byte)0xF5,(byte)0x53,(byte)0xEB,(byte)0x6F,(byte)0x83,(byte)0x5B,(byte)0xCF,(byte)0xCC,(byte)0x65,(byte)0x26,(byte)0x13,(byte)0x02,(byte)0x01,(byte)0x17,(byte)0x18,(byte)0x0F,(byte)0x32,(byte)0x30,(byte)0x31,(byte)0x37,(byte)0x30,(byte)0x37,(byte)0x32,(byte)0x30,
																  (byte)0x31,(byte)0x33,(byte)0x32,(byte)0x35,(byte)0x35,(byte)0x35,(byte)0x5A,(byte)0xA0,(byte)0x82,(byte)0x03,(byte)0x43,(byte)0x30,(byte)0x82,(byte)0x03,(byte)0x3F,(byte)0x30,(byte)0x82,(byte)0x02,(byte)0x27,(byte)0xA0,(byte)0x03,(byte)0x02,(byte)0x01,(byte)0x02,(byte)0x02,(byte)0x09,(byte)0x00,(byte)0xD9,(byte)0xAD,(byte)0x34,(byte)0xBC,(byte)0x6E,(byte)0x86,(byte)0xF2,(byte)0x47,(byte)0x30,(byte)0x0D,(byte)0x06,(byte)0x09,(byte)0x2A,(byte)0x86,(byte)0x48,(byte)0x86,(byte)0xF7,(byte)0x0D,(byte)0x01,(byte)0x01,(byte)0x05,(byte)0x05,(byte)0x00,(byte)0x30,(byte)0x51,(byte)0x31,(byte)0x0B,(byte)0x30,(byte)0x09,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x06,(byte)0x13,(byte)0x02,(byte)0x55,(byte)0x53,(byte)0x31,(byte)0x10,(byte)0x30,(byte)0x0E,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x08,(byte)0x13,(byte)0x07,(byte)0x46,(byte)0x6C,(byte)0x6F,(byte)0x72,(byte)0x69,(byte)0x64,(byte)0x61,(byte)0x31,(byte)0x10,(byte)0x30,(byte)0x0E,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x07,(byte)0x13,(byte)0x07,(byte)0x4F,(byte)0x72,(byte)0x6C,(byte)0x61,(byte)0x6E,(byte)0x64,(byte)0x6F,(byte)0x31,(byte)0x0C,(byte)0x30,(byte)0x0A,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x0A,(byte)0x13,(byte)0x03,(byte)0x55,(byte)0x43,(byte)0x46,(byte)0x31,(byte)0x10,(byte)0x30,(byte)0x0E,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x03,(byte)0x13,(byte)0x07,(byte)0x52,(byte)0x6F,(byte)0x6F,(byte)0x74,(byte)0x43,(byte)0x41,(byte)0x32,(byte)0x30,(byte)0x1E,(byte)0x17,(byte)0x0D,(byte)0x31,(byte)0x37,(byte)0x30,(byte)0x37,
																  (byte)0x32,(byte)0x31,(byte)0x32,(byte)0x32,(byte)0x35,(byte)0x33,(byte)0x32,(byte)0x30,(byte)0x5A,(byte)0x17,(byte)0x0D,(byte)0x31,(byte)0x38,(byte)0x30,(byte)0x32,(byte)0x30,(byte)0x36,(byte)0x32,(byte)0x32,(byte)0x35,(byte)0x33,(byte)0x32,(byte)0x30,(byte)0x5A,(byte)0x30,(byte)0x51,(byte)0x31,(byte)0x0B,(byte)0x30,(byte)0x09,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x06,(byte)0x13,(byte)0x02,(byte)0x55,(byte)0x53,(byte)0x31,(byte)0x10,(byte)0x30,(byte)0x0E,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x08,(byte)0x13,(byte)0x07,(byte)0x46,(byte)0x6C,(byte)0x6F,(byte)0x72,(byte)0x69,(byte)0x64,(byte)0x61,(byte)0x31,(byte)0x10,(byte)0x30,(byte)0x0E,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x07,(byte)0x13,(byte)0x07,(byte)0x4F,(byte)0x72,(byte)0x6C,(byte)0x61,(byte)0x6E,(byte)0x64,(byte)0x6F,(byte)0x31,(byte)0x0C,(byte)0x30,(byte)0x0A,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x0A,(byte)0x13,(byte)0x03,(byte)0x55,(byte)0x43,(byte)0x46,(byte)0x31,(byte)0x10,(byte)0x30,(byte)0x0E,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x03,(byte)0x13,(byte)0x07,(byte)0x48,(byte)0x6F,(byte)0x73,(byte)0x73,(byte)0x65,(byte)0x69,(byte)0x6E,(byte)0x30,(byte)0x82,(byte)0x01,(byte)0x22,(byte)0x30,(byte)0x0D,(byte)0x06,(byte)0x09,(byte)0x2A,(byte)0x86,(byte)0x48,(byte)0x86,(byte)0xF7,(byte)0x0D,(byte)0x01,(byte)0x01,(byte)0x01,(byte)0x05,(byte)0x00,(byte)0x03,(byte)0x82,(byte)0x01,(byte)0x0F,(byte)0x00,(byte)0x30,(byte)0x82,(byte)0x01,(byte)0x0A,(byte)0x02,(byte)0x82,(byte)0x01,(byte)0x01,(byte)0x00,(byte)0xA2,
																  (byte)0x7D,(byte)0x87,(byte)0x42,(byte)0x64,(byte)0x6C,(byte)0xA8,(byte)0x55,(byte)0x95,(byte)0xE9,(byte)0xD9,(byte)0x40,(byte)0x97,(byte)0x4A,(byte)0xCE,(byte)0xE4,(byte)0x59,(byte)0xCA,(byte)0xCF,(byte)0x6A,(byte)0x87,(byte)0x28,(byte)0x6A,(byte)0xB1,(byte)0x43,(byte)0x07,(byte)0xD3,(byte)0x8B,(byte)0xC9,(byte)0xD6,(byte)0xCD,(byte)0xE9,(byte)0x1D,(byte)0x5C,(byte)0x32,(byte)0xCD,(byte)0xEF,(byte)0x54,(byte)0x06,(byte)0xD7,(byte)0xE4,(byte)0xA7,(byte)0x13,(byte)0xBA,(byte)0x24,(byte)0x8C,(byte)0x3A,(byte)0x24,(byte)0x5B,(byte)0xE7,(byte)0x81,(byte)0x93,(byte)0x56,(byte)0x1A,(byte)0x5A,(byte)0x4A,(byte)0xF3,(byte)0x71,(byte)0x6B,(byte)0xD9,(byte)0xFC,(byte)0x8B,(byte)0x08,(byte)0x57,(byte)0x72,(byte)0xFB,(byte)0x30,(byte)0x06,(byte)0x72,(byte)0x38,(byte)0x50,(byte)0xDA,(byte)0x0D,(byte)0x62,(byte)0x87,(byte)0xE4,(byte)0xD1,(byte)0xF4,(byte)0x9E,(byte)0x85,(byte)0x42,(byte)0x83,(byte)0xC1,(byte)0x6A,(byte)0x4B,(byte)0xCA,(byte)0xEE,(byte)0x23,(byte)0xB4,(byte)0xE2,(byte)0x61,(byte)0x87,(byte)0x64,(byte)0x3F,(byte)0xF9,(byte)0xAF,(byte)0x24,(byte)0xFE,(byte)0xD9,(byte)0x27,(byte)0xBD,(byte)0xA0,(byte)0x72,(byte)0x30,(byte)0x9B,(byte)0x13,(byte)0x00,(byte)0x81,(byte)0xCF,(byte)0x86,(byte)0x95,(byte)0x99,(byte)0xF7,(byte)0x91,(byte)0xD7,(byte)0x12,(byte)0x61,(byte)0x84,(byte)0xD6,(byte)0x4E,(byte)0x27,(byte)0xAF,(byte)0xBB,(byte)0xEC,(byte)0xB3,(byte)0x0B,(byte)0x75,(byte)0xBE,(byte)0xE0,(byte)0xF7,(byte)0x56,(byte)0xBD,(byte)0xC4,(byte)0x75,(byte)0x36,(byte)0x60,(byte)0x0B,(byte)0xB2,(byte)0x78,(byte)0x3A,(byte)0xA6,(byte)0x2F,
																  (byte)0x9E,(byte)0xCD,(byte)0x26,(byte)0x27,(byte)0xB4,(byte)0xA0,(byte)0x34,(byte)0x6A,(byte)0x79,(byte)0xEC,(byte)0xE8,(byte)0x04,(byte)0x8D,(byte)0xA9,(byte)0xC5,(byte)0x23,(byte)0x55,(byte)0xF2,(byte)0x16,(byte)0x69,(byte)0x48,(byte)0x9F,(byte)0x0F,(byte)0xFF,(byte)0x18,(byte)0x4A,(byte)0x67,(byte)0x9E,(byte)0xE5,(byte)0xB2,(byte)0x33,(byte)0x13,(byte)0xA2,(byte)0xC0,(byte)0xF0,(byte)0xE1,(byte)0x82,(byte)0xC9,(byte)0x33,(byte)0x6A,(byte)0x66,(byte)0xD8,(byte)0x77,(byte)0xA4,(byte)0x96,(byte)0x9A,(byte)0x79,(byte)0x02,(byte)0xEA,(byte)0xF7,(byte)0x62,(byte)0x1C,(byte)0x4C,(byte)0xAB,(byte)0x85,(byte)0x6F,(byte)0x4E,(byte)0xAE,(byte)0xCE,(byte)0x0F,(byte)0x67,(byte)0xE6,(byte)0x68,(byte)0x47,(byte)0x23,(byte)0x52,(byte)0xFE,(byte)0x95,(byte)0x28,(byte)0xD8,(byte)0x63,(byte)0x9F,(byte)0x53,(byte)0x88,(byte)0xEA,(byte)0x2F,(byte)0x5B,(byte)0xAE,(byte)0x2B,(byte)0xED,(byte)0x34,(byte)0xC6,(byte)0x8C,(byte)0xE8,(byte)0xAF,(byte)0xB0,(byte)0x5D,(byte)0x8B,(byte)0x58,(byte)0x5D,(byte)0xB8,(byte)0xFF,(byte)0x75,(byte)0x71,(byte)0xB2,(byte)0xE4,(byte)0x96,(byte)0xA6,(byte)0x38,(byte)0x32,(byte)0x8A,(byte)0x35,(byte)0xAE,(byte)0x10,(byte)0xF6,(byte)0xC5,(byte)0x8C,(byte)0xD9,(byte)0x89,(byte)0xB4,(byte)0xD1,(byte)0x9F,(byte)0xDB,(byte)0x9F,(byte)0x02,(byte)0x03,(byte)0x01,(byte)0x00,(byte)0x01,(byte)0xA3,(byte)0x1A,(byte)0x30,(byte)0x18,(byte)0x30,(byte)0x16,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x1D,(byte)0x25,(byte)0x01,(byte)0x01,(byte)0xFF,(byte)0x04,(byte)0x0C,(byte)0x30,(byte)0x0A,(byte)0x06,(byte)0x08,(byte)0x2B,(byte)0x06,
																  (byte)0x01,(byte)0x05,(byte)0x05,(byte)0x07,(byte)0x03,(byte)0x08,(byte)0x30,(byte)0x0D,(byte)0x06,(byte)0x09,(byte)0x2A,(byte)0x86,(byte)0x48,(byte)0x86,(byte)0xF7,(byte)0x0D,(byte)0x01,(byte)0x01,(byte)0x05,(byte)0x05,(byte)0x00,(byte)0x03,(byte)0x82,(byte)0x01,(byte)0x01,(byte)0x00,(byte)0xAB,(byte)0x61,(byte)0x0C,(byte)0xC9,(byte)0x39,(byte)0x37,(byte)0x85,(byte)0x50,(byte)0x0C,(byte)0x2B,(byte)0x4A,(byte)0x9F,(byte)0xF7,(byte)0xDB,(byte)0x10,(byte)0x11,(byte)0x2C,(byte)0x1C,(byte)0x24,(byte)0x57,(byte)0x66,(byte)0x42,(byte)0x53,(byte)0x9C,(byte)0xAF,(byte)0xD5,(byte)0xB8,(byte)0xA5,(byte)0x6B,(byte)0x63,(byte)0x58,(byte)0xD8,(byte)0x40,(byte)0x70,(byte)0x3E,(byte)0x2E,(byte)0x54,(byte)0xBB,(byte)0x85,(byte)0x60,(byte)0xA6,(byte)0xE9,(byte)0x05,(byte)0x6B,(byte)0x90,(byte)0xE3,(byte)0x5C,(byte)0xA6,(byte)0x70,(byte)0xC5,(byte)0xC3,(byte)0xCD,(byte)0x8B,(byte)0x92,(byte)0x27,(byte)0x8E,(byte)0x53,(byte)0xCF,(byte)0x40,(byte)0x16,(byte)0xD3,(byte)0xD1,(byte)0x90,(byte)0xD2,(byte)0x06,(byte)0x70,(byte)0xDE,(byte)0xB4,(byte)0x9A,(byte)0x3B,(byte)0xC7,(byte)0xB6,(byte)0x8E,(byte)0x8A,(byte)0x1A,(byte)0x7C,(byte)0xE4,(byte)0x86,(byte)0xF6,(byte)0xEB,(byte)0x99,(byte)0x7A,(byte)0x96,(byte)0xA0,(byte)0x1E,(byte)0xD7,(byte)0x66,(byte)0xBF,(byte)0x32,(byte)0x16,(byte)0xA8,(byte)0xA3,(byte)0xED,(byte)0x79,(byte)0xD9,(byte)0xF2,(byte)0x0A,(byte)0x8C,(byte)0xB2,(byte)0x9E,(byte)0xB9,(byte)0xB8,(byte)0x3D,(byte)0x09,(byte)0x36,(byte)0x3B,(byte)0xDC,(byte)0xC0,(byte)0xBE,(byte)0x4C,(byte)0x26,(byte)0x01,(byte)0xF9,(byte)0x26,(byte)0x3B,
																  (byte)0x7F,(byte)0x4E,(byte)0x3C,(byte)0x5A,(byte)0x7D,(byte)0x07,(byte)0x2B,(byte)0x94,(byte)0x4C,(byte)0xB4,(byte)0x9A,(byte)0x72,(byte)0xF0,(byte)0x28,(byte)0x56,(byte)0x4D,(byte)0x74,(byte)0x15,(byte)0xD8,(byte)0x68,(byte)0x23,(byte)0xA0,(byte)0x7A,(byte)0xB3,(byte)0x55,(byte)0xA8,(byte)0x83,(byte)0xBA,(byte)0xB0,(byte)0xE0,(byte)0xDF,(byte)0x5A,(byte)0x8D,(byte)0x95,(byte)0xCF,(byte)0xC2,(byte)0x2D,(byte)0x7E,(byte)0x0F,(byte)0x09,(byte)0xA0,(byte)0xAF,(byte)0xBB,(byte)0xE3,(byte)0x6A,(byte)0xD7,(byte)0x95,(byte)0x81,(byte)0x70,(byte)0x9A,(byte)0xB9,(byte)0x2B,(byte)0x6A,(byte)0x76,(byte)0x56,(byte)0x91,(byte)0xDF,(byte)0x76,(byte)0x62,(byte)0x03,(byte)0x94,(byte)0x00,(byte)0xF6,(byte)0x2A,(byte)0xE4,(byte)0x57,(byte)0xDD,(byte)0xD5,(byte)0x11,(byte)0x35,(byte)0xD4,(byte)0x08,(byte)0x66,(byte)0x05,(byte)0xC9,(byte)0xAA,(byte)0x6D,(byte)0x10,(byte)0x8D,(byte)0xFF,(byte)0x16,(byte)0xE1,(byte)0xDF,(byte)0xF4,(byte)0xF7,(byte)0x76,(byte)0x76,(byte)0x64,(byte)0x19,(byte)0xB6,(byte)0xC2,(byte)0xAF,(byte)0x67,(byte)0x24,(byte)0x7A,(byte)0xAB,(byte)0x66,(byte)0x28,(byte)0xB6,(byte)0xF7,(byte)0xDE,(byte)0x5C,(byte)0x72,(byte)0x49,(byte)0x8A,(byte)0xC9,(byte)0x36,(byte)0x05,(byte)0xDC,(byte)0x39,(byte)0x2D,(byte)0x20,(byte)0x93,(byte)0x3C,(byte)0x9C,(byte)0x1D,(byte)0xCD,(byte)0x26,(byte)0x11,(byte)0xB3,(byte)0x52,(byte)0x04,(byte)0x67,(byte)0xE4,(byte)0xC5,(byte)0x1E,(byte)0xC5,(byte)0xF7,(byte)0x6B,(byte)0x9A,(byte)0x56,(byte)0x80,(byte)0xAB,(byte)0x58,(byte)0xF2,(byte)0x23,(byte)0xBE,(byte)0x78,(byte)0xE1,(byte)0xE4,(byte)0xAE,
																  (byte)0x31,(byte)0x82,(byte)0x02,(byte)0x14,(byte)0x30,(byte)0x82,(byte)0x02,(byte)0x10,(byte)0x02,(byte)0x01,(byte)0x01,(byte)0x30,(byte)0x5E,(byte)0x30,(byte)0x51,(byte)0x31,(byte)0x0B,(byte)0x30,(byte)0x09,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x06,(byte)0x13,(byte)0x02,(byte)0x55,(byte)0x53,(byte)0x31,(byte)0x10,(byte)0x30,(byte)0x0E,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x08,(byte)0x13,(byte)0x07,(byte)0x46,(byte)0x6C,(byte)0x6F,(byte)0x72,(byte)0x69,(byte)0x64,(byte)0x61,(byte)0x31,(byte)0x10,(byte)0x30,(byte)0x0E,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x07,(byte)0x13,(byte)0x07,(byte)0x4F,(byte)0x72,(byte)0x6C,(byte)0x61,(byte)0x6E,(byte)0x64,(byte)0x6F,(byte)0x31,(byte)0x0C,(byte)0x30,(byte)0x0A,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x0A,(byte)0x13,(byte)0x03,(byte)0x55,(byte)0x43,(byte)0x46,(byte)0x31,(byte)0x10,(byte)0x30,(byte)0x0E,(byte)0x06,(byte)0x03,(byte)0x55,(byte)0x04,(byte)0x03,(byte)0x13,(byte)0x07,(byte)0x52,(byte)0x6F,(byte)0x6F,(byte)0x74,(byte)0x43,(byte)0x41,(byte)0x32,(byte)0x02,(byte)0x09,(byte)0x00,(byte)0xD9,(byte)0xAD,(byte)0x34,(byte)0xBC,(byte)0x6E,(byte)0x86,(byte)0xF2,(byte)0x47,(byte)0x30,(byte)0x09,(byte)0x06,(byte)0x05,(byte)0x2B,(byte)0x0E,(byte)0x03,(byte)0x02,(byte)0x1A,(byte)0x05,(byte)0x00,(byte)0xA0,(byte)0x81,(byte)0x8C,(byte)0x30,(byte)0x1A,(byte)0x06,(byte)0x09,(byte)0x2A,(byte)0x86,(byte)0x48,(byte)0x86,(byte)0xF7,(byte)0x0D,(byte)0x01,(byte)0x09,(byte)0x03,(byte)0x31,(byte)0x0D,(byte)0x06,(byte)0x0B,(byte)0x2A,(byte)0x86,(byte)0x48,
																  (byte)0x86,(byte)0xF7,(byte)0x0D,(byte)0x01,(byte)0x09,(byte)0x10,(byte)0x01,(byte)0x04,(byte)0x30,(byte)0x1C,(byte)0x06,(byte)0x09,(byte)0x2A,(byte)0x86,(byte)0x48,(byte)0x86,(byte)0xF7,(byte)0x0D,(byte)0x01,(byte)0x09,(byte)0x05,(byte)0x31,(byte)0x0F,(byte)0x17,(byte)0x0D,(byte)0x31,(byte)0x37,(byte)0x30,(byte)0x37,(byte)0x32,(byte)0x32,(byte)0x31,(byte)0x34,(byte)0x31,(byte)0x34,(byte)0x34,(byte)0x39,(byte)0x5A,(byte)0x30,(byte)0x23,(byte)0x06,(byte)0x09,(byte)0x2A,(byte)0x86,(byte)0x48,(byte)0x86,(byte)0xF7,(byte)0x0D,(byte)0x01,(byte)0x09,(byte)0x04,(byte)0x31,(byte)0x16,(byte)0x04,(byte)0x14,(byte)0x29,(byte)0xF1,(byte)0x9B,(byte)0x49,(byte)0x77,(byte)0x46,(byte)0xE6,(byte)0xA5,(byte)0xFE,(byte)0x9C,(byte)0xCA,(byte)0xCC,(byte)0x07,(byte)0x00,(byte)0x18,(byte)0xAF,(byte)0x05,(byte)0xEB,(byte)0xE7,(byte)0xCE,(byte)0x30,(byte)0x2B,(byte)0x06,(byte)0x0B,(byte)0x2A,(byte)0x86,(byte)0x48,(byte)0x86,(byte)0xF7,(byte)0x0D,(byte)0x01,(byte)0x09,(byte)0x10,(byte)0x02,(byte)0x0C,(byte)0x31,(byte)0x1C,(byte)0x30,(byte)0x1A,(byte)0x30,(byte)0x18,(byte)0x30,(byte)0x16,(byte)0x04,(byte)0x14,(byte)0xC5,(byte)0x81,(byte)0xC7,(byte)0x1F,(byte)0x9E,(byte)0x96,(byte)0x46,(byte)0x38,(byte)0xC8,(byte)0x8D,(byte)0xB2,(byte)0xC9,(byte)0xA0,(byte)0xD5,(byte)0xC9,(byte)0xBB,(byte)0xA0,(byte)0x1C,(byte)0x46,(byte)0xBF,(byte)0x30,(byte)0x0D,(byte)0x06,(byte)0x09,(byte)0x2A,(byte)0x86,(byte)0x48,(byte)0x86,(byte)0xF7,(byte)0x0D,(byte)0x01,(byte)0x01,(byte)0x01,(byte)0x05,(byte)0x00,(byte)0x04,(byte)0x82,(byte)0x01,(byte)0x00,(byte)0x17,(byte)0x8A,
																  (byte)0x9A,(byte)0x8A,(byte)0xB3,(byte)0x41,(byte)0x75,(byte)0x37,(byte)0x2F,(byte)0x9D,(byte)0x45,(byte)0x49,(byte)0x22,(byte)0x7B,(byte)0xF5,(byte)0xBC,(byte)0x9D,(byte)0x5A,(byte)0x89,(byte)0x70,(byte)0xA5,(byte)0xC6,(byte)0x45,(byte)0x05,(byte)0x37,(byte)0xB1,(byte)0x2E,(byte)0x6E,(byte)0x94,(byte)0x0B,(byte)0xD0,(byte)0x4B,(byte)0xFE,(byte)0xCC,(byte)0x3B,(byte)0x14,(byte)0xA7,(byte)0xB5,(byte)0xB0,(byte)0x41,(byte)0xB6,(byte)0xF1,(byte)0x5A,(byte)0x19,(byte)0x15,(byte)0xF2,(byte)0x78,(byte)0x10,(byte)0x44,(byte)0xEF,(byte)0x68,(byte)0x37,(byte)0xBC,(byte)0xD8,(byte)0x70,(byte)0xE2,(byte)0x30,(byte)0x1D,(byte)0x20,(byte)0x7C,(byte)0x92,(byte)0x9E,(byte)0xD0,(byte)0xD5,(byte)0xA2,(byte)0x23,(byte)0x7D,(byte)0xE4,(byte)0x07,(byte)0xDB,(byte)0x37,(byte)0xBA,(byte)0xFB,(byte)0xCE,(byte)0xCA,(byte)0x2D,(byte)0xCC,(byte)0xF7,(byte)0x1D,(byte)0xEA,(byte)0x0E,(byte)0xA6,(byte)0xBA,(byte)0xFF,(byte)0x96,(byte)0xD6,(byte)0x4D,(byte)0x6B,(byte)0x7E,(byte)0x70,(byte)0xF4,(byte)0x2E,(byte)0xA0,(byte)0x18,(byte)0xDC,(byte)0x3A,(byte)0x59,(byte)0xF5,(byte)0x91,(byte)0xF1,(byte)0x22,(byte)0x7C,(byte)0xE9,(byte)0x85,(byte)0x9A,(byte)0xBB,(byte)0x9C,(byte)0x60,(byte)0xA8,(byte)0x1B,(byte)0x4A,(byte)0xA0,(byte)0xFA,(byte)0x75,(byte)0x19,(byte)0x8D,(byte)0x2A,(byte)0x8C,(byte)0x88,(byte)0x72,(byte)0xEB,(byte)0xC4,(byte)0xB1,(byte)0x4E,(byte)0x4A,(byte)0x13,(byte)0xC5,(byte)0xF5,(byte)0x12,(byte)0x14,(byte)0x25,(byte)0x23,(byte)0x52,(byte)0x3C,(byte)0x7D,(byte)0x9E,(byte)0x4F,(byte)0x6C,(byte)0x81,(byte)0xFD,(byte)0x51,(byte)0xEB,(byte)0xDE,
																  (byte)0xCD,(byte)0x65,(byte)0x53,(byte)0xE6,(byte)0xB4,(byte)0xDC,(byte)0x7A,(byte)0x74,(byte)0x0C,(byte)0xAE,(byte)0x9D,(byte)0x04,(byte)0x49,(byte)0xDB,(byte)0xE0,(byte)0x15,(byte)0x57,(byte)0x8F,(byte)0xEE,(byte)0x59,(byte)0x6B,(byte)0x2D,(byte)0xE3,(byte)0x68,(byte)0x1C,(byte)0x38,(byte)0x8F,(byte)0xF3,(byte)0x6C,(byte)0x26,(byte)0xA1,(byte)0xC9,(byte)0x51,(byte)0xD0,(byte)0x84,(byte)0x41,(byte)0xE8,(byte)0xBB,(byte)0xB3,(byte)0x7C,(byte)0x1E,(byte)0xE5,(byte)0x8C,(byte)0xD0,(byte)0xDC,(byte)0x99,(byte)0x3B,(byte)0x79,(byte)0x86,(byte)0xB8,(byte)0x4E,(byte)0xCC,(byte)0xDF,(byte)0x42,(byte)0xB5,(byte)0x0F,(byte)0xBD,(byte)0xE8,(byte)0x9F,(byte)0x3F,(byte)0xB2,(byte)0xDC,(byte)0x70,(byte)0xFB,(byte)0x05,(byte)0x96,(byte)0x10,(byte)0xE2,(byte)0xCA,(byte)0x7E,(byte)0x98,(byte)0x6B,(byte)0x51,(byte)0xFC,(byte)0x87,(byte)0x58,(byte)0x4E,(byte)0x01,(byte)0x1B,(byte)0xA0,(byte)0x09,(byte)0x32,(byte)0xE3,(byte)0x87,(byte)0x63,(byte)0xB0,(byte)0x44,(byte)0x5C,(byte)0x4A,(byte)0xBD,(byte)0x13,(byte)0xD7,(byte)0x79,(byte)0x57,(byte)0xF3,(byte)0x5E,(byte)0x14,(byte)0x11,(byte)0x44,(byte)0x94,(byte)0x9C,(byte)0xA9,(byte)0x1B,(byte)0x45,(byte)0xF1,(byte)0xED,(byte)0x11,(byte)0xBF,(byte)0xE4,(byte)0x66,(byte)0xE5,(byte)0x19,(byte)0x5A};

	private static RSAPrivateKey cardPrivateKey;
	private static RSAPrivateCrtKey cardPrivateCrtKey;
	private static RSAPublicKey caPublicKey;
	private static RSAPublicKey tsaPublicKey;
	
	private static RSAPrivateKey cardPrivateKey2;
	private static RSAPrivateCrtKey cardPrivateCrtKey2;
	private static RSAPublicKey caPublicKey2;
	private static RSAPublicKey tsaPublicKey2;
	
	private static TimeStampResp timeStampResp;
	private static X509Certificate x509certificate;
	private static X509CRL x509crl;
	
	private static Signature signature;

	public static void install(byte[] bArray, short bOffset, byte bLength) 
	{
		new tspSign().register(bArray, (short) (bOffset + 1), bArray[bOffset]);
	}
	
	private tspSign()
	{
		pin = new OwnerPIN((byte) 3, (byte) PIN_SIZE);
		byte[] buf = new byte[]{0x31,0x32,0x33,0x34};
		pin.update(buf, (short) 0, (byte) PIN_SIZE);
        pin.resetAndUnblock();
        pinValue = JCSystem.makeTransientByteArray((short) 4, JCSystem.CLEAR_ON_DESELECT);
        
        randomData = RandomData.getInstance(RandomData.ALG_SECURE_RANDOM);
        nonce = JCSystem.makeTransientByteArray((short) 8, JCSystem.CLEAR_ON_DESELECT);
        
        cardPrivateKey = (RSAPrivateKey) KeyBuilder.buildKey(KeyBuilder.TYPE_RSA_PRIVATE, KeyBuilder.LENGTH_RSA_1024, false);
        cardPrivateKey.setModulus(cardPrivateKeyModulus , (short) 0, (short) 128);
		cardPrivateKey.setExponent(cardPrivateKeyExponent , (short) 0, (short) 128);
        cardPrivateKey2 = (RSAPrivateKey) KeyBuilder.buildKey(KeyBuilder.TYPE_RSA_PRIVATE, KeyBuilder.LENGTH_RSA_2048, false);
        cardPrivateKey2.setModulus(cardPrivateKeyModulus2 , (short) 0, (short) 256);
		cardPrivateKey2.setExponent(cardPrivateKeyExponent2 , (short) 0, (short) 256);
		
		cardPrivateCrtKey = (RSAPrivateCrtKey) KeyBuilder.buildKey(KeyBuilder.TYPE_RSA_CRT_PRIVATE, KeyBuilder.LENGTH_RSA_1024, false);
		cardPrivateCrtKey.setP(cardPrivateCrtKeyP, (short)0, (short)64);
		cardPrivateCrtKey.setQ(cardPrivateCrtKeyQ, (short)0, (short)64);
		cardPrivateCrtKey.setDP1(cardPrivateCrtKeyDP, (short)0, (short)64);
		cardPrivateCrtKey.setDQ1(cardPrivateCrtKeyDQ, (short)0, (short)64);
		cardPrivateCrtKey.setPQ(cardPrivateCrtKeyPQ, (short)0, (short)64);
		        
        caPublicKey = (RSAPublicKey) KeyBuilder.buildKey(KeyBuilder.TYPE_RSA_PUBLIC, KeyBuilder.LENGTH_RSA_1024, false);
        caPublicKey.setModulus(caPublicKeyModulus, (short)0, (short)(128));
		caPublicKey.setExponent(caPublicKeyExponent, (short)(0), (short)(3));
        caPublicKey2 = (RSAPublicKey) KeyBuilder.buildKey(KeyBuilder.TYPE_RSA_PUBLIC, KeyBuilder.LENGTH_RSA_2048, false);
        caPublicKey2.setModulus(caPublicKeyModulus2, (short)0, (short)(256));
		caPublicKey2.setExponent(caPublicKeyExponent2, (short)(0), (short)(3));
		
		cardPrivateCrtKey2 = (RSAPrivateCrtKey) KeyBuilder.buildKey(KeyBuilder.TYPE_RSA_CRT_PRIVATE, KeyBuilder.LENGTH_RSA_2048, false);
		cardPrivateCrtKey2.setP(cardPrivateCrtKeyP2, (short)0, (short)128);
		cardPrivateCrtKey2.setQ(cardPrivateCrtKeyQ2, (short)0, (short)128);
		cardPrivateCrtKey2.setDP1(cardPrivateCrtKeyDP2, (short)0, (short)128);
		cardPrivateCrtKey2.setDQ1(cardPrivateCrtKeyDQ2, (short)0, (short)128);
		cardPrivateCrtKey2.setPQ(cardPrivateCrtKeyPQ2, (short)0, (short)128);
		
		tsaPublicKey = (RSAPublicKey) KeyBuilder.buildKey(KeyBuilder.TYPE_RSA_PUBLIC, KeyBuilder.LENGTH_RSA_1024, false);
		tsaPublicKey2 = (RSAPublicKey) KeyBuilder.buildKey(KeyBuilder.TYPE_RSA_PUBLIC, KeyBuilder.LENGTH_RSA_2048, false);
		
		timeStampResp = new TimeStampResp();
		x509certificate = new X509Certificate();
		x509crl = new X509CRL();
		
		signature = Signature.getInstance(Signature.ALG_RSA_SHA_PKCS1, false);
	}

	public void process(APDU apdu)
	{
		if(selectingApplet()){
			return;
		}
		try
		{
			byte[] buf = apdu.getBuffer();
			byte cla = buf[OFFSET_CLA];
			byte ins = buf[OFFSET_INS];
			
			switch (ins) {
				case INS_GET_CHALLENGE:
					processGetChallenge(apdu);
					break;
				case INS_VERIFY:
					processVerify(apdu);
					break;
				case INS_SIGN:
					processSign(apdu);
					break;				
				case INS_TSA_SIGN:
					processTSASign(apdu);
					break;
				case INS_FILL_BUFFER:
					processFillBuffer(apdu);
					break;
				case INS_GET_RESPONSE:
					processGetResponse(apdu);
					break;
			case INS_GARBAGE_COLLECTOR:
					processGarbageCollector(apdu);
					break;
				default:
					ISOException.throwIt(ISO7816.SW_INS_NOT_SUPPORTED);
			}
		}
		catch(SystemException e)
		{
			short reasonCode = e.getReason();
			if((reasonCode == SystemException.NO_RESOURCE) ||
			   (reasonCode == SystemException.NO_TRANSIENT_SPACE)){
					ISOException.throwIt(ISO7816.SW_WRONG_LENGTH);
				}
		}
	}
		
    private void processGetChallenge(APDU apdu)
    {
        randomData.generateData(nonce, (short) 0, (short) 8);
        
        apdu.setOutgoing();
        apdu.setOutgoingLength((short) 8);
        apdu.sendBytesLong(nonce, (short) 0, (short) 8);
    }
	
	private void processVerify(APDU apdu)
	{
		apdu.setIncomingAndReceive();
        byte[] buf = apdu.getBuffer();

        if (buf[OFFSET_P1] != (byte) 0x00 || buf[OFFSET_P2] != (byte) 0x80) {
            ISOException.throwIt(SW_INCORRECT_P1P2);
        }
        
        short lc = (short)(buf[OFFSET_LC]);
        if (lc != PIN_SIZE){
            ISOException.throwIt(SW_WRONG_LENGTH);
        }
        
        Util.arrayCopyNonAtomic(buf, OFFSET_CDATA, pinValue, (short) 0, lc);

        if (!pin.check(pinValue, (short) 0, (byte) PIN_SIZE)) {
            ISOException.throwIt((short) (SW_PIN_INCORRECT_TRIES_LEFT | pin.getTriesRemaining()));
        }
    }
		
	short readExtendedLengthData(APDU apdu, byte[] inData, short inDataIndex)
	{   	
		short readCount = apdu.setIncomingAndReceive();        
		short inDataLength = apdu.getIncomingLength();
		
		if(inDataLength == (short)0){//Fill Buffer has been used
			return inDataLength;}
			
		if (inDataLength > BIG_BUFFER_SIZE){
			ISOException.throwIt(ISO7816.SW_WRONG_LENGTH);}
		
		//short inDataIndex = 0;
		byte[] tempBuffer = apdu.getBuffer();
		inDataIndex = Util.arrayCopyNonAtomic(tempBuffer, ISO7816.OFFSET_EXT_CDATA, inData, inDataIndex, readCount);
		
		short bytesLeft = (short) (inDataLength - readCount);
		while(bytesLeft > 0)
		{
			readCount = apdu.receiveBytes((short)0);
			tempBuffer = apdu.getBuffer();
			bytesLeft -= readCount;
			inDataIndex = Util.arrayCopyNonAtomic(tempBuffer, (short)0, inData, inDataIndex, readCount);
		}
		
		return inDataLength;
	}
	
	void processFillBuffer(APDU apdu)
	{
		//Extract offset
		byte[] inBuffer = apdu.getBuffer();    	
    	byte p1 = inBuffer[ISO7816.OFFSET_P1];
        byte p2 = inBuffer[ISO7816.OFFSET_P2];
        short offset = Util.makeShort(p1, p2);
        
		//Read data with extended length
        byte[] inData = bigBuffer;
        short inDataLength = readExtendedLengthData(apdu, inData, offset);
	}
	
	private void processGetResponse(APDU apdu) 
	{
		//Extract offset
		byte[] inBuffer = apdu.getBuffer();    	
    	byte p1 = inBuffer[ISO7816.OFFSET_P1];
        byte p2 = inBuffer[ISO7816.OFFSET_P2];
        short offset = Util.makeShort(p1, p2);
        
        //Extract length
        short outDataLength = Util.makeShort(inBuffer[ISO7816.OFFSET_CDATA], inBuffer[ISO7816.OFFSET_CDATA + 1]);
        byte[] outData = bigBuffer;
        
		//Send data
		apdu.setOutgoing();		     
		apdu.setOutgoingLength(outDataLength);
		apdu.sendBytesLong(outData, offset, outDataLength);
	}

	private void processSign(APDU apdu)
    {
    	//Check conditions
    	byte[] inBuffer = apdu.getBuffer();
    	
    	byte p1 = inBuffer[ISO7816.OFFSET_P1];
        byte p2 = inBuffer[ISO7816.OFFSET_P2];        
        
        //Check PIN
        if (!pin.isValidated()) {
            ISOException.throwIt(ISO7816.SW_SECURITY_STATUS_NOT_SATISFIED);}
		
        //Sign and insert signature
        short dataLen = (short)inBuffer[ISO7816.OFFSET_LC];
        if(p1 == KeyLen1024){
        	if(p2 == KeyTypeRSA){
				signature.init(cardPrivateKey,Signature.MODE_SIGN);}
	        else{//KeyTypeRSACRT
				signature.init(cardPrivateCrtKey,Signature.MODE_SIGN);}}
	    else{//KeyLen2048
	    	if(p2 == KeyTypeRSA){
				signature.init(cardPrivateKey2,Signature.MODE_SIGN);}
	        else{//KeyTypeRSACRT
				signature.init(cardPrivateCrtKey2,Signature.MODE_SIGN);}}

		short signatureLen = signature.sign(inBuffer, ISO7816.OFFSET_CDATA, dataLen, bigBuffer, (short)0);
		if(signatureLen > 255){
			signatureLen = (short)255;}
		
        apdu.setOutgoing();
        apdu.setOutgoingLength(signatureLen);
        apdu.sendBytesLong(bigBuffer, (short)0, signatureLen);
	}
    	
	private void processTSASign(APDU apdu)
    {
    	//Check conditions
    	byte[] inBuffer = apdu.getBuffer();
    	
    	byte p1 = inBuffer[ISO7816.OFFSET_P1];
        byte p2 = inBuffer[ISO7816.OFFSET_P2];
        
        //Check PIN
        if (!pin.isValidated()) {
            ISOException.throwIt(ISO7816.SW_SECURITY_STATUS_NOT_SATISFIED);}       
            
        //Read data with extended length
        byte[] inData = bigBuffer;
        short inDataLength = readExtendedLengthData(apdu, inData, (short)0);
        
        //Parse TSResponse in command
        //timeStampResp.Parse(inData, (short)0);
        timeStampResp.Parse(inData, (short)0, true);
        
        //Check nonce
        if(Util.arrayCompare(nonce, (short)0, timeStampResp.nonce, (short)0, (short)8) != 0){
	        ISOException.throwIt(ISO7816.SW_DATA_INVALID);}
        
        //Parse certificate
	    //x509certificate.Parse(inData, timeStampResp.certificateIndex);
	    x509certificate.Parse(inData, timeStampResp.certificateIndex, true);
	    
	    //Extract toSign and verify signature
        if(p1 == KeyLen1024){
        	tsaPublicKey.setModulus(inData, x509certificate.publicKeyModulusIndex, x509certificate.publicKeyModulusLen);
			tsaPublicKey.setExponent(inData, x509certificate.publicKeyExponentIndex, x509certificate.publicKeyExponentLen);
			signature.init(tsaPublicKey,Signature.MODE_VERIFY);}
		else{
        	tsaPublicKey2.setModulus(inData, x509certificate.publicKeyModulusIndex, x509certificate.publicKeyModulusLen);
			tsaPublicKey2.setExponent(inData, x509certificate.publicKeyExponentIndex, x509certificate.publicKeyExponentLen);
			signature.init(tsaPublicKey2,Signature.MODE_VERIFY);}
        boolean verifyResult = signature.verify(inData, timeStampResp.tstInfoIndex, timeStampResp.tstInfoLen, inData, timeStampResp.signatureIndex, timeStampResp.signatureLen);
        // if(verifyResult == false){
	        // ISOException.throwIt(ISO7816.SW_DATA_INVALID);}
	    
	    //Validate certificate
	    //Check time validity of certificate
        if((Util.arrayCompare(timeStampResp.time, (short)2, x509certificate.notBefore, (short)0, (short)12) == -1)//currentTime < notBefore 
		|| (Util.arrayCompare(x509certificate.notAfter, (short)0, timeStampResp.time, (short)2, (short)12) == -1))//notAfter < currentTime
			{ISOException.throwIt(ISO7816.SW_DATA_INVALID);}
		//Check cert's signature
		if(p1 == KeyLen1024){
			signature.init(caPublicKey,Signature.MODE_VERIFY);}
		else{
			signature.init(caPublicKey2,Signature.MODE_VERIFY);}
        verifyResult = signature.verify(inData, x509certificate.tbsCertificateIndex, x509certificate.tbsCertificateLen, inData, x509certificate.signatureIndex, x509certificate.signatureLen);
        if(verifyResult == false){
	        ISOException.throwIt(ISO7816.SW_DATA_INVALID);}
		
	    //Check CRL
	    //x509crl.Parse(inData, timeStampResp.crlIndex);
	    x509crl.Parse(inData, timeStampResp.crlIndex, true);
		
		//Check CRL's signature
		if(p1 == KeyLen1024){
			signature.init(caPublicKey,Signature.MODE_VERIFY);}
		else{
			signature.init(caPublicKey2,Signature.MODE_VERIFY);}
        verifyResult = signature.verify(inData, x509crl.tbsCertListIndex, x509crl.tbsCertListLen, inData, x509crl.signatureIndex, x509crl.signatureLen);
        if(verifyResult == false){
	        ISOException.throwIt(SW_DATA_INVALID);
	    }
	    //Check time validity of CRL
	    if((Util.arrayCompare(timeStampResp.time, (short)2,  x509crl.thisUpdate, (short)0, (short)12) == -1)//currentTime < notBefore 
		|| (Util.arrayCompare(x509crl.nextUpdate, (short)0, timeStampResp.time, (short)2, (short)12) == -1))//notAfter < currentTime
			{ISOException.throwIt(ISO7816.SW_DATA_INVALID);}
	    //Check certificate in CRL
	    boolean revocationResult = x509crl.isRevoked(inData, timeStampResp.crlIndex, x509certificate.serialNumber);
	    if(revocationResult == true){
	        ISOException.throwIt(ISO7816.SW_DATA_INVALID);}
        
        //Build TSResponse in response
        byte[] outData = bigBuffer;
		short tsrResponseLen = 0;
		if(p1 == KeyLen1024){
			tsrResponseLen = (short)tsrResponseTemplate.length;
			Util.arrayCopyNonAtomic(tsrResponseTemplate, (short)0, outData, (short)0, tsrResponseLen);}
		else{
			tsrResponseLen = (short)tsrResponseTemplate2.length;
			Util.arrayCopyNonAtomic(tsrResponseTemplate2, (short)0, outData, (short)0, tsrResponseLen);}
		
		//copy time and hash
		byte[] time = new byte[14];
		byte[] hash = new byte[20];
		Util.arrayCopyNonAtomic(timeStampResp.time, (short)0, time, (short)0, (short)14);
		Util.arrayCopyNonAtomic(timeStampResp.hash, (short)0, hash, (short)0, (short)20);
		
        //timeStampResp.Parse(outData, (short)0);
        timeStampResp.Parse(outData, (short)0, false);
        
        //Insert time and hash
        Util.arrayCopy(time, (short)0, outData, timeStampResp.timeIndex, (short)14);
        Util.arrayCopy(hash, (short)0, outData, timeStampResp.hashIndex, (short)20);

        //Sign and insert signature
        if(p1 == KeyLen1024){
        	if(p2== KeyTypeRSA){
				signature.init(cardPrivateKey,Signature.MODE_SIGN);}
			else{//KeyTypeRSACRT
				signature.init(cardPrivateCrtKey,Signature.MODE_SIGN);}}
	    else{
	    	if(p2== KeyTypeRSA){
				signature.init(cardPrivateKey2,Signature.MODE_SIGN);}
			else{//KeyTypeRSACRT
				signature.init(cardPrivateCrtKey2,Signature.MODE_SIGN);}}
        signature.sign(outData, timeStampResp.tstInfoIndex, timeStampResp.tstInfoLen, outData, timeStampResp.signatureIndex);
        
        if(inDataLength == (short)0)
        {//Chaining
        	byte[] b = new byte[2];
        	b[1] = (byte)(tsrResponseLen & 0xff);
			b[0] = (byte)((tsrResponseLen >> 8) & 0xff);
			apdu.setOutgoing();
			apdu.setOutgoingLength((short)2);
			apdu.sendBytesLong(b, (short)0, (short)2);
        }
        else
        {
			apdu.setOutgoing();		     
			apdu.setOutgoingLength(tsrResponseLen);
			apdu.sendBytesLong(outData, (short)0, tsrResponseLen);
        }
	}
	
	private void processGarbageCollector(APDU apdu)
	{
		JCSystem.requestObjectDeletion();
	}
}
